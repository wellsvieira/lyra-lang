Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Body
Rule 2     Program -> Declares Body
Rule 3     Program -> Declares
Rule 4     Declares -> Declare
Rule 5     Declares -> Declares Declare
Rule 6     Declare -> INT NAME
Rule 7     Declare -> INT NAME ATR NUM
Rule 8     Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET
Rule 9     Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN
Rule 10    Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET
Rule 11    Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN
Rule 12    List -> NUM COMMA List
Rule 13    List -> NUM
Rule 14    ListOfLists -> LPAREN List RPAREN COMMA ListOfLists
Rule 15    ListOfLists -> LPAREN List RPAREN
Rule 16    Body -> Statement
Rule 17    Body -> Body Statement
Rule 18    Statement -> Attribution
Rule 19    Statement -> If
Rule 20    Statement -> While
Rule 21    Statement -> Write
Rule 22    Attribution -> NAME ATR Expression
Rule 23    Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression
Rule 24    Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
Rule 25    Attribution -> NAME ATR READ
Rule 26    Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ
Rule 27    Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
Rule 28    If -> IF LPAREN Condition RPAREN THEN Body END
Rule 29    If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END
Rule 30    While -> WHILE LPAREN Condition RPAREN DO Body END
Rule 31    Write -> WRITES LPAREN STRING RPAREN
Rule 32    Write -> WRITEI LPAREN Expression RPAREN
Rule 33    Expression -> Expression ADD Term
Rule 34    Expression -> Expression SUB Term
Rule 35    Expression -> Expression OR Term
Rule 36    Expression -> Term
Rule 37    Term -> Term MULT Factor
Rule 38    Term -> Term DIV Factor
Rule 39    Term -> Term MOD Factor
Rule 40    Term -> Term AND Factor
Rule 41    Term -> Factor
Rule 42    Factor -> NUM
Rule 43    Factor -> Variable
Rule 44    Factor -> LPAREN Expression RPAREN
Rule 45    Factor -> Condition
Rule 46    Factor -> NOT LPAREN Condition RPAREN
Rule 47    Condition -> Expression GREATER Expression
Rule 48    Condition -> Expression LESS Expression
Rule 49    Condition -> Expression GREATERE Expression
Rule 50    Condition -> Expression LESSE Expression
Rule 51    Condition -> Expression EQUAL Expression
Rule 52    Condition -> Expression NEQUAL Expression
Rule 53    Condition -> Expression
Rule 54    Variable -> NAME LSBRACKET Expression RSBRACKET
Rule 55    Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
Rule 56    Variable -> NAME

Terminals, with rules where they appear

ADD                  : 33
AND                  : 40
ARRAY                : 8 9
ATR                  : 7 9 11 22 23 24 25 26 27
COMMA                : 12 14
DIV                  : 38
DO                   : 30
ELSE                 : 29
END                  : 28 29 30
EQUAL                : 51
GREATER              : 47
GREATERE             : 49
IF                   : 28 29
INT                  : 6 7
LESS                 : 48
LESSE                : 50
LPAREN               : 9 11 14 15 28 29 30 31 32 44 46
LSBRACKET            : 8 9 10 10 11 11 23 24 24 26 27 27 54 55 55
MATRIX               : 10 11
MOD                  : 39
MULT                 : 37
NAME                 : 6 7 8 9 10 11 22 23 24 25 26 27 54 55 56
NEQUAL               : 52
NOT                  : 46
NUM                  : 7 8 9 10 10 11 11 12 13 42
OR                   : 35
READ                 : 25 26 27
RPAREN               : 9 11 14 15 28 29 30 31 32 44 46
RSBRACKET            : 8 9 10 10 11 11 23 24 24 26 27 54 55 55
STRING               : 31
SUB                  : 34
THEN                 : 28 29
WHILE                : 30
WRITEI               : 32
WRITES               : 31
error                : 

Nonterminals, with rules where they appear

Attribution          : 18
Body                 : 1 2 17 28 29 29 30
Condition            : 28 29 30 45 46
Declare              : 4 5
Declares             : 2 3 5
Expression           : 22 23 23 24 24 24 26 27 27 32 33 34 35 44 47 47 48 48 49 49 50 50 51 51 52 52 53 54 55 55
Factor               : 37 38 39 40 41
If                   : 19
List                 : 9 12 14 15
ListOfLists          : 11 14
Program              : 0
Statement            : 16 17
Term                 : 33 34 35 36 37 38 39 40
Variable             : 43
While                : 20
Write                : 21

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Body
    (2) Program -> . Declares Body
    (3) Program -> . Declares
    (16) Body -> . Statement
    (17) Body -> . Body Statement
    (4) Declares -> . Declare
    (5) Declares -> . Declares Declare
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (6) Declare -> . INT NAME
    (7) Declare -> . INT NAME ATR NUM
    (8) Declare -> . ARRAY NAME LSBRACKET NUM RSBRACKET
    (9) Declare -> . ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN
    (10) Declare -> . MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET
    (11) Declare -> . MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    INT             shift and go to state 10
    ARRAY           shift and go to state 12
    MATRIX          shift and go to state 13
    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Program                        shift and go to state 1
    Body                           shift and go to state 2
    Declares                       shift and go to state 3
    Statement                      shift and go to state 4
    Declare                        shift and go to state 5
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 1

    (0) S' -> Program .



state 2

    (1) Program -> Body .
    (17) Body -> Body . Statement
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    $end            reduce using rule 1 (Program -> Body .)
    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Statement                      shift and go to state 18
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 3

    (2) Program -> Declares . Body
    (3) Program -> Declares .
    (5) Declares -> Declares . Declare
    (16) Body -> . Statement
    (17) Body -> . Body Statement
    (6) Declare -> . INT NAME
    (7) Declare -> . INT NAME ATR NUM
    (8) Declare -> . ARRAY NAME LSBRACKET NUM RSBRACKET
    (9) Declare -> . ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN
    (10) Declare -> . MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET
    (11) Declare -> . MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    $end            reduce using rule 3 (Program -> Declares .)
    INT             shift and go to state 10
    ARRAY           shift and go to state 12
    MATRIX          shift and go to state 13
    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Body                           shift and go to state 19
    Declare                        shift and go to state 20
    Statement                      shift and go to state 4
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 4

    (16) Body -> Statement .

    NAME            reduce using rule 16 (Body -> Statement .)
    IF              reduce using rule 16 (Body -> Statement .)
    WHILE           reduce using rule 16 (Body -> Statement .)
    WRITES          reduce using rule 16 (Body -> Statement .)
    WRITEI          reduce using rule 16 (Body -> Statement .)
    $end            reduce using rule 16 (Body -> Statement .)
    END             reduce using rule 16 (Body -> Statement .)
    ELSE            reduce using rule 16 (Body -> Statement .)


state 5

    (4) Declares -> Declare .

    INT             reduce using rule 4 (Declares -> Declare .)
    ARRAY           reduce using rule 4 (Declares -> Declare .)
    MATRIX          reduce using rule 4 (Declares -> Declare .)
    NAME            reduce using rule 4 (Declares -> Declare .)
    IF              reduce using rule 4 (Declares -> Declare .)
    WHILE           reduce using rule 4 (Declares -> Declare .)
    WRITES          reduce using rule 4 (Declares -> Declare .)
    WRITEI          reduce using rule 4 (Declares -> Declare .)
    $end            reduce using rule 4 (Declares -> Declare .)


state 6

    (18) Statement -> Attribution .

    NAME            reduce using rule 18 (Statement -> Attribution .)
    IF              reduce using rule 18 (Statement -> Attribution .)
    WHILE           reduce using rule 18 (Statement -> Attribution .)
    WRITES          reduce using rule 18 (Statement -> Attribution .)
    WRITEI          reduce using rule 18 (Statement -> Attribution .)
    $end            reduce using rule 18 (Statement -> Attribution .)
    END             reduce using rule 18 (Statement -> Attribution .)
    ELSE            reduce using rule 18 (Statement -> Attribution .)


state 7

    (19) Statement -> If .

    NAME            reduce using rule 19 (Statement -> If .)
    IF              reduce using rule 19 (Statement -> If .)
    WHILE           reduce using rule 19 (Statement -> If .)
    WRITES          reduce using rule 19 (Statement -> If .)
    WRITEI          reduce using rule 19 (Statement -> If .)
    $end            reduce using rule 19 (Statement -> If .)
    END             reduce using rule 19 (Statement -> If .)
    ELSE            reduce using rule 19 (Statement -> If .)


state 8

    (20) Statement -> While .

    NAME            reduce using rule 20 (Statement -> While .)
    IF              reduce using rule 20 (Statement -> While .)
    WHILE           reduce using rule 20 (Statement -> While .)
    WRITES          reduce using rule 20 (Statement -> While .)
    WRITEI          reduce using rule 20 (Statement -> While .)
    $end            reduce using rule 20 (Statement -> While .)
    END             reduce using rule 20 (Statement -> While .)
    ELSE            reduce using rule 20 (Statement -> While .)


state 9

    (21) Statement -> Write .

    NAME            reduce using rule 21 (Statement -> Write .)
    IF              reduce using rule 21 (Statement -> Write .)
    WHILE           reduce using rule 21 (Statement -> Write .)
    WRITES          reduce using rule 21 (Statement -> Write .)
    WRITEI          reduce using rule 21 (Statement -> Write .)
    $end            reduce using rule 21 (Statement -> Write .)
    END             reduce using rule 21 (Statement -> Write .)
    ELSE            reduce using rule 21 (Statement -> Write .)


state 10

    (6) Declare -> INT . NAME
    (7) Declare -> INT . NAME ATR NUM

    NAME            shift and go to state 21


state 11

    (22) Attribution -> NAME . ATR Expression
    (23) Attribution -> NAME . LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> NAME . LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> NAME . ATR READ
    (26) Attribution -> NAME . LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> NAME . LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ

    ATR             shift and go to state 22
    LSBRACKET       shift and go to state 23


state 12

    (8) Declare -> ARRAY . NAME LSBRACKET NUM RSBRACKET
    (9) Declare -> ARRAY . NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN

    NAME            shift and go to state 24


state 13

    (10) Declare -> MATRIX . NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET
    (11) Declare -> MATRIX . NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN

    NAME            shift and go to state 25


state 14

    (28) If -> IF . LPAREN Condition RPAREN THEN Body END
    (29) If -> IF . LPAREN Condition RPAREN THEN Body ELSE Body END

    LPAREN          shift and go to state 26


state 15

    (30) While -> WHILE . LPAREN Condition RPAREN DO Body END

    LPAREN          shift and go to state 27


state 16

    (31) Write -> WRITES . LPAREN STRING RPAREN

    LPAREN          shift and go to state 28


state 17

    (32) Write -> WRITEI . LPAREN Expression RPAREN

    LPAREN          shift and go to state 29


state 18

    (17) Body -> Body Statement .

    NAME            reduce using rule 17 (Body -> Body Statement .)
    IF              reduce using rule 17 (Body -> Body Statement .)
    WHILE           reduce using rule 17 (Body -> Body Statement .)
    WRITES          reduce using rule 17 (Body -> Body Statement .)
    WRITEI          reduce using rule 17 (Body -> Body Statement .)
    $end            reduce using rule 17 (Body -> Body Statement .)
    END             reduce using rule 17 (Body -> Body Statement .)
    ELSE            reduce using rule 17 (Body -> Body Statement .)


state 19

    (2) Program -> Declares Body .
    (17) Body -> Body . Statement
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    $end            reduce using rule 2 (Program -> Declares Body .)
    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Statement                      shift and go to state 18
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 20

    (5) Declares -> Declares Declare .

    INT             reduce using rule 5 (Declares -> Declares Declare .)
    ARRAY           reduce using rule 5 (Declares -> Declares Declare .)
    MATRIX          reduce using rule 5 (Declares -> Declares Declare .)
    NAME            reduce using rule 5 (Declares -> Declares Declare .)
    IF              reduce using rule 5 (Declares -> Declares Declare .)
    WHILE           reduce using rule 5 (Declares -> Declares Declare .)
    WRITES          reduce using rule 5 (Declares -> Declares Declare .)
    WRITEI          reduce using rule 5 (Declares -> Declares Declare .)
    $end            reduce using rule 5 (Declares -> Declares Declare .)


state 21

    (6) Declare -> INT NAME .
    (7) Declare -> INT NAME . ATR NUM

    INT             reduce using rule 6 (Declare -> INT NAME .)
    ARRAY           reduce using rule 6 (Declare -> INT NAME .)
    MATRIX          reduce using rule 6 (Declare -> INT NAME .)
    NAME            reduce using rule 6 (Declare -> INT NAME .)
    IF              reduce using rule 6 (Declare -> INT NAME .)
    WHILE           reduce using rule 6 (Declare -> INT NAME .)
    WRITES          reduce using rule 6 (Declare -> INT NAME .)
    WRITEI          reduce using rule 6 (Declare -> INT NAME .)
    $end            reduce using rule 6 (Declare -> INT NAME .)
    ATR             shift and go to state 30


state 22

    (22) Attribution -> NAME ATR . Expression
    (25) Attribution -> NAME ATR . READ
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    READ            shift and go to state 33
    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 32
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 23

    (23) Attribution -> NAME LSBRACKET . Expression RSBRACKET ATR Expression
    (24) Attribution -> NAME LSBRACKET . Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (26) Attribution -> NAME LSBRACKET . Expression RSBRACKET ATR READ
    (27) Attribution -> NAME LSBRACKET . Expression LSBRACKET Expression RSBRACKET ATR READ
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 41
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 24

    (8) Declare -> ARRAY NAME . LSBRACKET NUM RSBRACKET
    (9) Declare -> ARRAY NAME . LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN

    LSBRACKET       shift and go to state 42


state 25

    (10) Declare -> MATRIX NAME . LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET
    (11) Declare -> MATRIX NAME . LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN

    LSBRACKET       shift and go to state 43


state 26

    (28) If -> IF LPAREN . Condition RPAREN THEN Body END
    (29) If -> IF LPAREN . Condition RPAREN THEN Body ELSE Body END
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Condition                      shift and go to state 44
    Expression                     shift and go to state 45
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37

state 27

    (30) While -> WHILE LPAREN . Condition RPAREN DO Body END
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Condition                      shift and go to state 46
    Expression                     shift and go to state 45
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37

state 28

    (31) Write -> WRITES LPAREN . STRING RPAREN

    STRING          shift and go to state 47


state 29

    (32) Write -> WRITEI LPAREN . Expression RPAREN
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 48
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 30

    (7) Declare -> INT NAME ATR . NUM

    NUM             shift and go to state 49


state 31

    (54) Variable -> NAME . LSBRACKET Expression RSBRACKET
    (55) Variable -> NAME . LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> NAME .

  ! shift/reduce conflict for LSBRACKET resolved as shift
    LSBRACKET       shift and go to state 50
    ADD             reduce using rule 56 (Variable -> NAME .)
    SUB             reduce using rule 56 (Variable -> NAME .)
    OR              reduce using rule 56 (Variable -> NAME .)
    GREATER         reduce using rule 56 (Variable -> NAME .)
    LESS            reduce using rule 56 (Variable -> NAME .)
    GREATERE        reduce using rule 56 (Variable -> NAME .)
    LESSE           reduce using rule 56 (Variable -> NAME .)
    EQUAL           reduce using rule 56 (Variable -> NAME .)
    NEQUAL          reduce using rule 56 (Variable -> NAME .)
    NAME            reduce using rule 56 (Variable -> NAME .)
    IF              reduce using rule 56 (Variable -> NAME .)
    WHILE           reduce using rule 56 (Variable -> NAME .)
    WRITES          reduce using rule 56 (Variable -> NAME .)
    WRITEI          reduce using rule 56 (Variable -> NAME .)
    $end            reduce using rule 56 (Variable -> NAME .)
    MULT            reduce using rule 56 (Variable -> NAME .)
    DIV             reduce using rule 56 (Variable -> NAME .)
    MOD             reduce using rule 56 (Variable -> NAME .)
    AND             reduce using rule 56 (Variable -> NAME .)
    END             reduce using rule 56 (Variable -> NAME .)
    ELSE            reduce using rule 56 (Variable -> NAME .)
    RSBRACKET       reduce using rule 56 (Variable -> NAME .)
    RPAREN          reduce using rule 56 (Variable -> NAME .)

  ! LSBRACKET       [ reduce using rule 56 (Variable -> NAME .) ]


state 32

    (22) Attribution -> NAME ATR Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 22 (Attribution -> NAME ATR Expression .)
  ! reduce/reduce conflict for IF resolved using rule 22 (Attribution -> NAME ATR Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 22 (Attribution -> NAME ATR Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 22 (Attribution -> NAME ATR Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 22 (Attribution -> NAME ATR Expression .)
  ! reduce/reduce conflict for $end resolved using rule 22 (Attribution -> NAME ATR Expression .)
  ! reduce/reduce conflict for END resolved using rule 22 (Attribution -> NAME ATR Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 22 (Attribution -> NAME ATR Expression .)
    NAME            reduce using rule 22 (Attribution -> NAME ATR Expression .)
    IF              reduce using rule 22 (Attribution -> NAME ATR Expression .)
    WHILE           reduce using rule 22 (Attribution -> NAME ATR Expression .)
    WRITES          reduce using rule 22 (Attribution -> NAME ATR Expression .)
    WRITEI          reduce using rule 22 (Attribution -> NAME ATR Expression .)
    $end            reduce using rule 22 (Attribution -> NAME ATR Expression .)
    END             reduce using rule 22 (Attribution -> NAME ATR Expression .)
    ELSE            reduce using rule 22 (Attribution -> NAME ATR Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]


state 33

    (25) Attribution -> NAME ATR READ .

    NAME            reduce using rule 25 (Attribution -> NAME ATR READ .)
    IF              reduce using rule 25 (Attribution -> NAME ATR READ .)
    WHILE           reduce using rule 25 (Attribution -> NAME ATR READ .)
    WRITES          reduce using rule 25 (Attribution -> NAME ATR READ .)
    WRITEI          reduce using rule 25 (Attribution -> NAME ATR READ .)
    $end            reduce using rule 25 (Attribution -> NAME ATR READ .)
    END             reduce using rule 25 (Attribution -> NAME ATR READ .)
    ELSE            reduce using rule 25 (Attribution -> NAME ATR READ .)


state 34

    (36) Expression -> Term .
    (37) Term -> Term . MULT Factor
    (38) Term -> Term . DIV Factor
    (39) Term -> Term . MOD Factor
    (40) Term -> Term . AND Factor

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    ADD             reduce using rule 36 (Expression -> Term .)
    SUB             reduce using rule 36 (Expression -> Term .)
    OR              reduce using rule 36 (Expression -> Term .)
    GREATER         reduce using rule 36 (Expression -> Term .)
    LESS            reduce using rule 36 (Expression -> Term .)
    GREATERE        reduce using rule 36 (Expression -> Term .)
    LESSE           reduce using rule 36 (Expression -> Term .)
    EQUAL           reduce using rule 36 (Expression -> Term .)
    NEQUAL          reduce using rule 36 (Expression -> Term .)
    NAME            reduce using rule 36 (Expression -> Term .)
    IF              reduce using rule 36 (Expression -> Term .)
    WHILE           reduce using rule 36 (Expression -> Term .)
    WRITES          reduce using rule 36 (Expression -> Term .)
    WRITEI          reduce using rule 36 (Expression -> Term .)
    $end            reduce using rule 36 (Expression -> Term .)
    END             reduce using rule 36 (Expression -> Term .)
    ELSE            reduce using rule 36 (Expression -> Term .)
    RSBRACKET       reduce using rule 36 (Expression -> Term .)
    LSBRACKET       reduce using rule 36 (Expression -> Term .)
    RPAREN          reduce using rule 36 (Expression -> Term .)
    MULT            shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    AND             shift and go to state 63

  ! MULT            [ reduce using rule 36 (Expression -> Term .) ]
  ! DIV             [ reduce using rule 36 (Expression -> Term .) ]
  ! MOD             [ reduce using rule 36 (Expression -> Term .) ]
  ! AND             [ reduce using rule 36 (Expression -> Term .) ]


state 35

    (41) Term -> Factor .

    ADD             reduce using rule 41 (Term -> Factor .)
    SUB             reduce using rule 41 (Term -> Factor .)
    OR              reduce using rule 41 (Term -> Factor .)
    GREATER         reduce using rule 41 (Term -> Factor .)
    LESS            reduce using rule 41 (Term -> Factor .)
    GREATERE        reduce using rule 41 (Term -> Factor .)
    LESSE           reduce using rule 41 (Term -> Factor .)
    EQUAL           reduce using rule 41 (Term -> Factor .)
    NEQUAL          reduce using rule 41 (Term -> Factor .)
    NAME            reduce using rule 41 (Term -> Factor .)
    IF              reduce using rule 41 (Term -> Factor .)
    WHILE           reduce using rule 41 (Term -> Factor .)
    WRITES          reduce using rule 41 (Term -> Factor .)
    WRITEI          reduce using rule 41 (Term -> Factor .)
    $end            reduce using rule 41 (Term -> Factor .)
    MULT            reduce using rule 41 (Term -> Factor .)
    DIV             reduce using rule 41 (Term -> Factor .)
    MOD             reduce using rule 41 (Term -> Factor .)
    AND             reduce using rule 41 (Term -> Factor .)
    END             reduce using rule 41 (Term -> Factor .)
    ELSE            reduce using rule 41 (Term -> Factor .)
    RSBRACKET       reduce using rule 41 (Term -> Factor .)
    LSBRACKET       reduce using rule 41 (Term -> Factor .)
    RPAREN          reduce using rule 41 (Term -> Factor .)


state 36

    (42) Factor -> NUM .

    ADD             reduce using rule 42 (Factor -> NUM .)
    SUB             reduce using rule 42 (Factor -> NUM .)
    OR              reduce using rule 42 (Factor -> NUM .)
    GREATER         reduce using rule 42 (Factor -> NUM .)
    LESS            reduce using rule 42 (Factor -> NUM .)
    GREATERE        reduce using rule 42 (Factor -> NUM .)
    LESSE           reduce using rule 42 (Factor -> NUM .)
    EQUAL           reduce using rule 42 (Factor -> NUM .)
    NEQUAL          reduce using rule 42 (Factor -> NUM .)
    NAME            reduce using rule 42 (Factor -> NUM .)
    IF              reduce using rule 42 (Factor -> NUM .)
    WHILE           reduce using rule 42 (Factor -> NUM .)
    WRITES          reduce using rule 42 (Factor -> NUM .)
    WRITEI          reduce using rule 42 (Factor -> NUM .)
    $end            reduce using rule 42 (Factor -> NUM .)
    MULT            reduce using rule 42 (Factor -> NUM .)
    DIV             reduce using rule 42 (Factor -> NUM .)
    MOD             reduce using rule 42 (Factor -> NUM .)
    AND             reduce using rule 42 (Factor -> NUM .)
    END             reduce using rule 42 (Factor -> NUM .)
    ELSE            reduce using rule 42 (Factor -> NUM .)
    RSBRACKET       reduce using rule 42 (Factor -> NUM .)
    LSBRACKET       reduce using rule 42 (Factor -> NUM .)
    RPAREN          reduce using rule 42 (Factor -> NUM .)


state 37

    (43) Factor -> Variable .

    ADD             reduce using rule 43 (Factor -> Variable .)
    SUB             reduce using rule 43 (Factor -> Variable .)
    OR              reduce using rule 43 (Factor -> Variable .)
    GREATER         reduce using rule 43 (Factor -> Variable .)
    LESS            reduce using rule 43 (Factor -> Variable .)
    GREATERE        reduce using rule 43 (Factor -> Variable .)
    LESSE           reduce using rule 43 (Factor -> Variable .)
    EQUAL           reduce using rule 43 (Factor -> Variable .)
    NEQUAL          reduce using rule 43 (Factor -> Variable .)
    NAME            reduce using rule 43 (Factor -> Variable .)
    IF              reduce using rule 43 (Factor -> Variable .)
    WHILE           reduce using rule 43 (Factor -> Variable .)
    WRITES          reduce using rule 43 (Factor -> Variable .)
    WRITEI          reduce using rule 43 (Factor -> Variable .)
    $end            reduce using rule 43 (Factor -> Variable .)
    MULT            reduce using rule 43 (Factor -> Variable .)
    DIV             reduce using rule 43 (Factor -> Variable .)
    MOD             reduce using rule 43 (Factor -> Variable .)
    AND             reduce using rule 43 (Factor -> Variable .)
    END             reduce using rule 43 (Factor -> Variable .)
    ELSE            reduce using rule 43 (Factor -> Variable .)
    RSBRACKET       reduce using rule 43 (Factor -> Variable .)
    LSBRACKET       reduce using rule 43 (Factor -> Variable .)
    RPAREN          reduce using rule 43 (Factor -> Variable .)


state 38

    (44) Factor -> LPAREN . Expression RPAREN
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 64
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 39

    (45) Factor -> Condition .

    ADD             reduce using rule 45 (Factor -> Condition .)
    SUB             reduce using rule 45 (Factor -> Condition .)
    OR              reduce using rule 45 (Factor -> Condition .)
    GREATER         reduce using rule 45 (Factor -> Condition .)
    LESS            reduce using rule 45 (Factor -> Condition .)
    GREATERE        reduce using rule 45 (Factor -> Condition .)
    LESSE           reduce using rule 45 (Factor -> Condition .)
    EQUAL           reduce using rule 45 (Factor -> Condition .)
    NEQUAL          reduce using rule 45 (Factor -> Condition .)
    NAME            reduce using rule 45 (Factor -> Condition .)
    IF              reduce using rule 45 (Factor -> Condition .)
    WHILE           reduce using rule 45 (Factor -> Condition .)
    WRITES          reduce using rule 45 (Factor -> Condition .)
    WRITEI          reduce using rule 45 (Factor -> Condition .)
    $end            reduce using rule 45 (Factor -> Condition .)
    MULT            reduce using rule 45 (Factor -> Condition .)
    DIV             reduce using rule 45 (Factor -> Condition .)
    MOD             reduce using rule 45 (Factor -> Condition .)
    AND             reduce using rule 45 (Factor -> Condition .)
    END             reduce using rule 45 (Factor -> Condition .)
    ELSE            reduce using rule 45 (Factor -> Condition .)
    RSBRACKET       reduce using rule 45 (Factor -> Condition .)
    LSBRACKET       reduce using rule 45 (Factor -> Condition .)
    RPAREN          reduce using rule 45 (Factor -> Condition .)


state 40

    (46) Factor -> NOT . LPAREN Condition RPAREN

    LPAREN          shift and go to state 65


state 41

    (23) Attribution -> NAME LSBRACKET Expression . RSBRACKET ATR Expression
    (24) Attribution -> NAME LSBRACKET Expression . RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (26) Attribution -> NAME LSBRACKET Expression . RSBRACKET ATR READ
    (27) Attribution -> NAME LSBRACKET Expression . LSBRACKET Expression RSBRACKET ATR READ
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for RSBRACKET resolved as shift
  ! shift/reduce conflict for LSBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    RSBRACKET       shift and go to state 67
    LSBRACKET       shift and go to state 66
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! LSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]


state 42

    (8) Declare -> ARRAY NAME LSBRACKET . NUM RSBRACKET
    (9) Declare -> ARRAY NAME LSBRACKET . NUM RSBRACKET ATR LPAREN List RPAREN

    NUM             shift and go to state 68


state 43

    (10) Declare -> MATRIX NAME LSBRACKET . NUM RSBRACKET LSBRACKET NUM RSBRACKET
    (11) Declare -> MATRIX NAME LSBRACKET . NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN

    NUM             shift and go to state 69


state 44

    (28) If -> IF LPAREN Condition . RPAREN THEN Body END
    (29) If -> IF LPAREN Condition . RPAREN THEN Body ELSE Body END
    (45) Factor -> Condition .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 70
    MULT            reduce using rule 45 (Factor -> Condition .)
    DIV             reduce using rule 45 (Factor -> Condition .)
    MOD             reduce using rule 45 (Factor -> Condition .)
    AND             reduce using rule 45 (Factor -> Condition .)
    GREATER         reduce using rule 45 (Factor -> Condition .)
    LESS            reduce using rule 45 (Factor -> Condition .)
    GREATERE        reduce using rule 45 (Factor -> Condition .)
    LESSE           reduce using rule 45 (Factor -> Condition .)
    EQUAL           reduce using rule 45 (Factor -> Condition .)
    NEQUAL          reduce using rule 45 (Factor -> Condition .)
    ADD             reduce using rule 45 (Factor -> Condition .)
    SUB             reduce using rule 45 (Factor -> Condition .)
    OR              reduce using rule 45 (Factor -> Condition .)

  ! RPAREN          [ reduce using rule 45 (Factor -> Condition .) ]


state 45

    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term

  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    RPAREN          reduce using rule 53 (Condition -> Expression .)
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)
    NAME            reduce using rule 53 (Condition -> Expression .)
    IF              reduce using rule 53 (Condition -> Expression .)
    WHILE           reduce using rule 53 (Condition -> Expression .)
    WRITES          reduce using rule 53 (Condition -> Expression .)
    WRITEI          reduce using rule 53 (Condition -> Expression .)
    $end            reduce using rule 53 (Condition -> Expression .)
    END             reduce using rule 53 (Condition -> Expression .)
    ELSE            reduce using rule 53 (Condition -> Expression .)
    RSBRACKET       reduce using rule 53 (Condition -> Expression .)
    LSBRACKET       reduce using rule 53 (Condition -> Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53

  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]


state 46

    (30) While -> WHILE LPAREN Condition . RPAREN DO Body END
    (45) Factor -> Condition .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 71
    MULT            reduce using rule 45 (Factor -> Condition .)
    DIV             reduce using rule 45 (Factor -> Condition .)
    MOD             reduce using rule 45 (Factor -> Condition .)
    AND             reduce using rule 45 (Factor -> Condition .)
    GREATER         reduce using rule 45 (Factor -> Condition .)
    LESS            reduce using rule 45 (Factor -> Condition .)
    GREATERE        reduce using rule 45 (Factor -> Condition .)
    LESSE           reduce using rule 45 (Factor -> Condition .)
    EQUAL           reduce using rule 45 (Factor -> Condition .)
    NEQUAL          reduce using rule 45 (Factor -> Condition .)
    ADD             reduce using rule 45 (Factor -> Condition .)
    SUB             reduce using rule 45 (Factor -> Condition .)
    OR              reduce using rule 45 (Factor -> Condition .)

  ! RPAREN          [ reduce using rule 45 (Factor -> Condition .) ]


state 47

    (31) Write -> WRITES LPAREN STRING . RPAREN

    RPAREN          shift and go to state 72


state 48

    (32) Write -> WRITEI LPAREN Expression . RPAREN
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    RPAREN          shift and go to state 73
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! RPAREN          [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]


state 49

    (7) Declare -> INT NAME ATR NUM .

    INT             reduce using rule 7 (Declare -> INT NAME ATR NUM .)
    ARRAY           reduce using rule 7 (Declare -> INT NAME ATR NUM .)
    MATRIX          reduce using rule 7 (Declare -> INT NAME ATR NUM .)
    NAME            reduce using rule 7 (Declare -> INT NAME ATR NUM .)
    IF              reduce using rule 7 (Declare -> INT NAME ATR NUM .)
    WHILE           reduce using rule 7 (Declare -> INT NAME ATR NUM .)
    WRITES          reduce using rule 7 (Declare -> INT NAME ATR NUM .)
    WRITEI          reduce using rule 7 (Declare -> INT NAME ATR NUM .)
    $end            reduce using rule 7 (Declare -> INT NAME ATR NUM .)


state 50

    (54) Variable -> NAME LSBRACKET . Expression RSBRACKET
    (55) Variable -> NAME LSBRACKET . Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 74
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 51

    (33) Expression -> Expression ADD . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 45
    Term                           shift and go to state 75
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 52

    (34) Expression -> Expression SUB . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 45
    Term                           shift and go to state 76
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 53

    (35) Expression -> Expression OR . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 45
    Term                           shift and go to state 77
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 54

    (47) Condition -> Expression GREATER . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 78
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 55

    (48) Condition -> Expression LESS . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 79
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 56

    (49) Condition -> Expression GREATERE . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 80
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 57

    (50) Condition -> Expression LESSE . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 81
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 58

    (51) Condition -> Expression EQUAL . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 82
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 59

    (52) Condition -> Expression NEQUAL . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 83
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 60

    (37) Term -> Term MULT . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Term                           shift and go to state 34
    Factor                         shift and go to state 84
    Variable                       shift and go to state 37
    Expression                     shift and go to state 45
    Condition                      shift and go to state 39

state 61

    (38) Term -> Term DIV . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Term                           shift and go to state 34
    Factor                         shift and go to state 85
    Variable                       shift and go to state 37
    Expression                     shift and go to state 45
    Condition                      shift and go to state 39

state 62

    (39) Term -> Term MOD . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Term                           shift and go to state 34
    Factor                         shift and go to state 86
    Variable                       shift and go to state 37
    Expression                     shift and go to state 45
    Condition                      shift and go to state 39

state 63

    (40) Term -> Term AND . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Term                           shift and go to state 34
    Factor                         shift and go to state 87
    Variable                       shift and go to state 37
    Expression                     shift and go to state 45
    Condition                      shift and go to state 39

state 64

    (44) Factor -> LPAREN Expression . RPAREN
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    RPAREN          shift and go to state 88
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! RPAREN          [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]


state 65

    (46) Factor -> NOT LPAREN . Condition RPAREN
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Condition                      shift and go to state 89
    Expression                     shift and go to state 45
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37

state 66

    (27) Attribution -> NAME LSBRACKET Expression LSBRACKET . Expression RSBRACKET ATR READ
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 90
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 67

    (23) Attribution -> NAME LSBRACKET Expression RSBRACKET . ATR Expression
    (24) Attribution -> NAME LSBRACKET Expression RSBRACKET . LSBRACKET Expression RSBRACKET ATR Expression
    (26) Attribution -> NAME LSBRACKET Expression RSBRACKET . ATR READ

    ATR             shift and go to state 92
    LSBRACKET       shift and go to state 91


state 68

    (8) Declare -> ARRAY NAME LSBRACKET NUM . RSBRACKET
    (9) Declare -> ARRAY NAME LSBRACKET NUM . RSBRACKET ATR LPAREN List RPAREN

    RSBRACKET       shift and go to state 93


state 69

    (10) Declare -> MATRIX NAME LSBRACKET NUM . RSBRACKET LSBRACKET NUM RSBRACKET
    (11) Declare -> MATRIX NAME LSBRACKET NUM . RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN

    RSBRACKET       shift and go to state 94


state 70

    (28) If -> IF LPAREN Condition RPAREN . THEN Body END
    (29) If -> IF LPAREN Condition RPAREN . THEN Body ELSE Body END

    THEN            shift and go to state 95


state 71

    (30) While -> WHILE LPAREN Condition RPAREN . DO Body END

    DO              shift and go to state 96


state 72

    (31) Write -> WRITES LPAREN STRING RPAREN .

    NAME            reduce using rule 31 (Write -> WRITES LPAREN STRING RPAREN .)
    IF              reduce using rule 31 (Write -> WRITES LPAREN STRING RPAREN .)
    WHILE           reduce using rule 31 (Write -> WRITES LPAREN STRING RPAREN .)
    WRITES          reduce using rule 31 (Write -> WRITES LPAREN STRING RPAREN .)
    WRITEI          reduce using rule 31 (Write -> WRITES LPAREN STRING RPAREN .)
    $end            reduce using rule 31 (Write -> WRITES LPAREN STRING RPAREN .)
    END             reduce using rule 31 (Write -> WRITES LPAREN STRING RPAREN .)
    ELSE            reduce using rule 31 (Write -> WRITES LPAREN STRING RPAREN .)


state 73

    (32) Write -> WRITEI LPAREN Expression RPAREN .

    NAME            reduce using rule 32 (Write -> WRITEI LPAREN Expression RPAREN .)
    IF              reduce using rule 32 (Write -> WRITEI LPAREN Expression RPAREN .)
    WHILE           reduce using rule 32 (Write -> WRITEI LPAREN Expression RPAREN .)
    WRITES          reduce using rule 32 (Write -> WRITEI LPAREN Expression RPAREN .)
    WRITEI          reduce using rule 32 (Write -> WRITEI LPAREN Expression RPAREN .)
    $end            reduce using rule 32 (Write -> WRITEI LPAREN Expression RPAREN .)
    END             reduce using rule 32 (Write -> WRITEI LPAREN Expression RPAREN .)
    ELSE            reduce using rule 32 (Write -> WRITEI LPAREN Expression RPAREN .)


state 74

    (54) Variable -> NAME LSBRACKET Expression . RSBRACKET
    (55) Variable -> NAME LSBRACKET Expression . RSBRACKET LSBRACKET Expression RSBRACKET
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for RSBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    RSBRACKET       shift and go to state 97
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]


state 75

    (33) Expression -> Expression ADD Term .
    (37) Term -> Term . MULT Factor
    (38) Term -> Term . DIV Factor
    (39) Term -> Term . MOD Factor
    (40) Term -> Term . AND Factor
    (36) Expression -> Term .

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for ADD resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for SUB resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for OR resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for GREATER resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for LESS resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for GREATERE resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for LESSE resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for EQUAL resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for NEQUAL resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for NAME resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for IF resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for WRITES resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for WRITEI resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for $end resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for END resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for ELSE resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 33 (Expression -> Expression ADD Term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 33 (Expression -> Expression ADD Term .)
    ADD             reduce using rule 33 (Expression -> Expression ADD Term .)
    SUB             reduce using rule 33 (Expression -> Expression ADD Term .)
    OR              reduce using rule 33 (Expression -> Expression ADD Term .)
    GREATER         reduce using rule 33 (Expression -> Expression ADD Term .)
    LESS            reduce using rule 33 (Expression -> Expression ADD Term .)
    GREATERE        reduce using rule 33 (Expression -> Expression ADD Term .)
    LESSE           reduce using rule 33 (Expression -> Expression ADD Term .)
    EQUAL           reduce using rule 33 (Expression -> Expression ADD Term .)
    NEQUAL          reduce using rule 33 (Expression -> Expression ADD Term .)
    NAME            reduce using rule 33 (Expression -> Expression ADD Term .)
    IF              reduce using rule 33 (Expression -> Expression ADD Term .)
    WHILE           reduce using rule 33 (Expression -> Expression ADD Term .)
    WRITES          reduce using rule 33 (Expression -> Expression ADD Term .)
    WRITEI          reduce using rule 33 (Expression -> Expression ADD Term .)
    $end            reduce using rule 33 (Expression -> Expression ADD Term .)
    END             reduce using rule 33 (Expression -> Expression ADD Term .)
    ELSE            reduce using rule 33 (Expression -> Expression ADD Term .)
    RSBRACKET       reduce using rule 33 (Expression -> Expression ADD Term .)
    LSBRACKET       reduce using rule 33 (Expression -> Expression ADD Term .)
    RPAREN          reduce using rule 33 (Expression -> Expression ADD Term .)
    MULT            shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    AND             shift and go to state 63

  ! MULT            [ reduce using rule 33 (Expression -> Expression ADD Term .) ]
  ! DIV             [ reduce using rule 33 (Expression -> Expression ADD Term .) ]
  ! MOD             [ reduce using rule 33 (Expression -> Expression ADD Term .) ]
  ! AND             [ reduce using rule 33 (Expression -> Expression ADD Term .) ]
  ! MULT            [ reduce using rule 36 (Expression -> Term .) ]
  ! DIV             [ reduce using rule 36 (Expression -> Term .) ]
  ! MOD             [ reduce using rule 36 (Expression -> Term .) ]
  ! AND             [ reduce using rule 36 (Expression -> Term .) ]
  ! ADD             [ reduce using rule 36 (Expression -> Term .) ]
  ! SUB             [ reduce using rule 36 (Expression -> Term .) ]
  ! OR              [ reduce using rule 36 (Expression -> Term .) ]
  ! GREATER         [ reduce using rule 36 (Expression -> Term .) ]
  ! LESS            [ reduce using rule 36 (Expression -> Term .) ]
  ! GREATERE        [ reduce using rule 36 (Expression -> Term .) ]
  ! LESSE           [ reduce using rule 36 (Expression -> Term .) ]
  ! EQUAL           [ reduce using rule 36 (Expression -> Term .) ]
  ! NEQUAL          [ reduce using rule 36 (Expression -> Term .) ]
  ! NAME            [ reduce using rule 36 (Expression -> Term .) ]
  ! IF              [ reduce using rule 36 (Expression -> Term .) ]
  ! WHILE           [ reduce using rule 36 (Expression -> Term .) ]
  ! WRITES          [ reduce using rule 36 (Expression -> Term .) ]
  ! WRITEI          [ reduce using rule 36 (Expression -> Term .) ]
  ! $end            [ reduce using rule 36 (Expression -> Term .) ]
  ! END             [ reduce using rule 36 (Expression -> Term .) ]
  ! ELSE            [ reduce using rule 36 (Expression -> Term .) ]
  ! RSBRACKET       [ reduce using rule 36 (Expression -> Term .) ]
  ! LSBRACKET       [ reduce using rule 36 (Expression -> Term .) ]
  ! RPAREN          [ reduce using rule 36 (Expression -> Term .) ]


state 76

    (34) Expression -> Expression SUB Term .
    (37) Term -> Term . MULT Factor
    (38) Term -> Term . DIV Factor
    (39) Term -> Term . MOD Factor
    (40) Term -> Term . AND Factor
    (36) Expression -> Term .

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for ADD resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for SUB resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for OR resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for GREATER resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for LESS resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for GREATERE resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for LESSE resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for EQUAL resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for NEQUAL resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for NAME resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for IF resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for WHILE resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for WRITES resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for WRITEI resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for $end resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for END resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for ELSE resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 34 (Expression -> Expression SUB Term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 34 (Expression -> Expression SUB Term .)
    ADD             reduce using rule 34 (Expression -> Expression SUB Term .)
    SUB             reduce using rule 34 (Expression -> Expression SUB Term .)
    OR              reduce using rule 34 (Expression -> Expression SUB Term .)
    GREATER         reduce using rule 34 (Expression -> Expression SUB Term .)
    LESS            reduce using rule 34 (Expression -> Expression SUB Term .)
    GREATERE        reduce using rule 34 (Expression -> Expression SUB Term .)
    LESSE           reduce using rule 34 (Expression -> Expression SUB Term .)
    EQUAL           reduce using rule 34 (Expression -> Expression SUB Term .)
    NEQUAL          reduce using rule 34 (Expression -> Expression SUB Term .)
    NAME            reduce using rule 34 (Expression -> Expression SUB Term .)
    IF              reduce using rule 34 (Expression -> Expression SUB Term .)
    WHILE           reduce using rule 34 (Expression -> Expression SUB Term .)
    WRITES          reduce using rule 34 (Expression -> Expression SUB Term .)
    WRITEI          reduce using rule 34 (Expression -> Expression SUB Term .)
    $end            reduce using rule 34 (Expression -> Expression SUB Term .)
    END             reduce using rule 34 (Expression -> Expression SUB Term .)
    ELSE            reduce using rule 34 (Expression -> Expression SUB Term .)
    RSBRACKET       reduce using rule 34 (Expression -> Expression SUB Term .)
    LSBRACKET       reduce using rule 34 (Expression -> Expression SUB Term .)
    RPAREN          reduce using rule 34 (Expression -> Expression SUB Term .)
    MULT            shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    AND             shift and go to state 63

  ! MULT            [ reduce using rule 34 (Expression -> Expression SUB Term .) ]
  ! DIV             [ reduce using rule 34 (Expression -> Expression SUB Term .) ]
  ! MOD             [ reduce using rule 34 (Expression -> Expression SUB Term .) ]
  ! AND             [ reduce using rule 34 (Expression -> Expression SUB Term .) ]
  ! MULT            [ reduce using rule 36 (Expression -> Term .) ]
  ! DIV             [ reduce using rule 36 (Expression -> Term .) ]
  ! MOD             [ reduce using rule 36 (Expression -> Term .) ]
  ! AND             [ reduce using rule 36 (Expression -> Term .) ]
  ! ADD             [ reduce using rule 36 (Expression -> Term .) ]
  ! SUB             [ reduce using rule 36 (Expression -> Term .) ]
  ! OR              [ reduce using rule 36 (Expression -> Term .) ]
  ! GREATER         [ reduce using rule 36 (Expression -> Term .) ]
  ! LESS            [ reduce using rule 36 (Expression -> Term .) ]
  ! GREATERE        [ reduce using rule 36 (Expression -> Term .) ]
  ! LESSE           [ reduce using rule 36 (Expression -> Term .) ]
  ! EQUAL           [ reduce using rule 36 (Expression -> Term .) ]
  ! NEQUAL          [ reduce using rule 36 (Expression -> Term .) ]
  ! NAME            [ reduce using rule 36 (Expression -> Term .) ]
  ! IF              [ reduce using rule 36 (Expression -> Term .) ]
  ! WHILE           [ reduce using rule 36 (Expression -> Term .) ]
  ! WRITES          [ reduce using rule 36 (Expression -> Term .) ]
  ! WRITEI          [ reduce using rule 36 (Expression -> Term .) ]
  ! $end            [ reduce using rule 36 (Expression -> Term .) ]
  ! END             [ reduce using rule 36 (Expression -> Term .) ]
  ! ELSE            [ reduce using rule 36 (Expression -> Term .) ]
  ! RSBRACKET       [ reduce using rule 36 (Expression -> Term .) ]
  ! LSBRACKET       [ reduce using rule 36 (Expression -> Term .) ]
  ! RPAREN          [ reduce using rule 36 (Expression -> Term .) ]


state 77

    (35) Expression -> Expression OR Term .
    (37) Term -> Term . MULT Factor
    (38) Term -> Term . DIV Factor
    (39) Term -> Term . MOD Factor
    (40) Term -> Term . AND Factor
    (36) Expression -> Term .

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for ADD resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for SUB resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for OR resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for GREATER resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for LESS resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for GREATERE resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for LESSE resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for EQUAL resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for NEQUAL resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for NAME resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for IF resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for WHILE resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for WRITES resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for WRITEI resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for $end resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for END resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for ELSE resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 35 (Expression -> Expression OR Term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 35 (Expression -> Expression OR Term .)
    ADD             reduce using rule 35 (Expression -> Expression OR Term .)
    SUB             reduce using rule 35 (Expression -> Expression OR Term .)
    OR              reduce using rule 35 (Expression -> Expression OR Term .)
    GREATER         reduce using rule 35 (Expression -> Expression OR Term .)
    LESS            reduce using rule 35 (Expression -> Expression OR Term .)
    GREATERE        reduce using rule 35 (Expression -> Expression OR Term .)
    LESSE           reduce using rule 35 (Expression -> Expression OR Term .)
    EQUAL           reduce using rule 35 (Expression -> Expression OR Term .)
    NEQUAL          reduce using rule 35 (Expression -> Expression OR Term .)
    NAME            reduce using rule 35 (Expression -> Expression OR Term .)
    IF              reduce using rule 35 (Expression -> Expression OR Term .)
    WHILE           reduce using rule 35 (Expression -> Expression OR Term .)
    WRITES          reduce using rule 35 (Expression -> Expression OR Term .)
    WRITEI          reduce using rule 35 (Expression -> Expression OR Term .)
    $end            reduce using rule 35 (Expression -> Expression OR Term .)
    END             reduce using rule 35 (Expression -> Expression OR Term .)
    ELSE            reduce using rule 35 (Expression -> Expression OR Term .)
    RSBRACKET       reduce using rule 35 (Expression -> Expression OR Term .)
    LSBRACKET       reduce using rule 35 (Expression -> Expression OR Term .)
    RPAREN          reduce using rule 35 (Expression -> Expression OR Term .)
    MULT            shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    AND             shift and go to state 63

  ! MULT            [ reduce using rule 35 (Expression -> Expression OR Term .) ]
  ! DIV             [ reduce using rule 35 (Expression -> Expression OR Term .) ]
  ! MOD             [ reduce using rule 35 (Expression -> Expression OR Term .) ]
  ! AND             [ reduce using rule 35 (Expression -> Expression OR Term .) ]
  ! MULT            [ reduce using rule 36 (Expression -> Term .) ]
  ! DIV             [ reduce using rule 36 (Expression -> Term .) ]
  ! MOD             [ reduce using rule 36 (Expression -> Term .) ]
  ! AND             [ reduce using rule 36 (Expression -> Term .) ]
  ! ADD             [ reduce using rule 36 (Expression -> Term .) ]
  ! SUB             [ reduce using rule 36 (Expression -> Term .) ]
  ! OR              [ reduce using rule 36 (Expression -> Term .) ]
  ! GREATER         [ reduce using rule 36 (Expression -> Term .) ]
  ! LESS            [ reduce using rule 36 (Expression -> Term .) ]
  ! GREATERE        [ reduce using rule 36 (Expression -> Term .) ]
  ! LESSE           [ reduce using rule 36 (Expression -> Term .) ]
  ! EQUAL           [ reduce using rule 36 (Expression -> Term .) ]
  ! NEQUAL          [ reduce using rule 36 (Expression -> Term .) ]
  ! NAME            [ reduce using rule 36 (Expression -> Term .) ]
  ! IF              [ reduce using rule 36 (Expression -> Term .) ]
  ! WHILE           [ reduce using rule 36 (Expression -> Term .) ]
  ! WRITES          [ reduce using rule 36 (Expression -> Term .) ]
  ! WRITEI          [ reduce using rule 36 (Expression -> Term .) ]
  ! $end            [ reduce using rule 36 (Expression -> Term .) ]
  ! END             [ reduce using rule 36 (Expression -> Term .) ]
  ! ELSE            [ reduce using rule 36 (Expression -> Term .) ]
  ! RSBRACKET       [ reduce using rule 36 (Expression -> Term .) ]
  ! LSBRACKET       [ reduce using rule 36 (Expression -> Term .) ]
  ! RPAREN          [ reduce using rule 36 (Expression -> Term .) ]


state 78

    (47) Condition -> Expression GREATER Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for MULT resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for DIV resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for MOD resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for AND resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for IF resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for $end resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for END resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 47 (Condition -> Expression GREATER Expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 47 (Condition -> Expression GREATER Expression .)
    NAME            reduce using rule 47 (Condition -> Expression GREATER Expression .)
    IF              reduce using rule 47 (Condition -> Expression GREATER Expression .)
    WHILE           reduce using rule 47 (Condition -> Expression GREATER Expression .)
    WRITES          reduce using rule 47 (Condition -> Expression GREATER Expression .)
    WRITEI          reduce using rule 47 (Condition -> Expression GREATER Expression .)
    $end            reduce using rule 47 (Condition -> Expression GREATER Expression .)
    MULT            reduce using rule 47 (Condition -> Expression GREATER Expression .)
    DIV             reduce using rule 47 (Condition -> Expression GREATER Expression .)
    MOD             reduce using rule 47 (Condition -> Expression GREATER Expression .)
    AND             reduce using rule 47 (Condition -> Expression GREATER Expression .)
    END             reduce using rule 47 (Condition -> Expression GREATER Expression .)
    ELSE            reduce using rule 47 (Condition -> Expression GREATER Expression .)
    RSBRACKET       reduce using rule 47 (Condition -> Expression GREATER Expression .)
    LSBRACKET       reduce using rule 47 (Condition -> Expression GREATER Expression .)
    RPAREN          reduce using rule 47 (Condition -> Expression GREATER Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59

  ! ADD             [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! SUB             [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! OR              [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! GREATER         [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! LESS            [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! GREATERE        [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! LESSE           [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! EQUAL           [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! NEQUAL          [ reduce using rule 47 (Condition -> Expression GREATER Expression .) ]
  ! MULT            [ reduce using rule 53 (Condition -> Expression .) ]
  ! DIV             [ reduce using rule 53 (Condition -> Expression .) ]
  ! MOD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! AND             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]
  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! LSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! RPAREN          [ reduce using rule 53 (Condition -> Expression .) ]


state 79

    (48) Condition -> Expression LESS Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for MULT resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for DIV resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for MOD resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for AND resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for IF resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for $end resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for END resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 48 (Condition -> Expression LESS Expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 48 (Condition -> Expression LESS Expression .)
    NAME            reduce using rule 48 (Condition -> Expression LESS Expression .)
    IF              reduce using rule 48 (Condition -> Expression LESS Expression .)
    WHILE           reduce using rule 48 (Condition -> Expression LESS Expression .)
    WRITES          reduce using rule 48 (Condition -> Expression LESS Expression .)
    WRITEI          reduce using rule 48 (Condition -> Expression LESS Expression .)
    $end            reduce using rule 48 (Condition -> Expression LESS Expression .)
    MULT            reduce using rule 48 (Condition -> Expression LESS Expression .)
    DIV             reduce using rule 48 (Condition -> Expression LESS Expression .)
    MOD             reduce using rule 48 (Condition -> Expression LESS Expression .)
    AND             reduce using rule 48 (Condition -> Expression LESS Expression .)
    END             reduce using rule 48 (Condition -> Expression LESS Expression .)
    ELSE            reduce using rule 48 (Condition -> Expression LESS Expression .)
    RSBRACKET       reduce using rule 48 (Condition -> Expression LESS Expression .)
    LSBRACKET       reduce using rule 48 (Condition -> Expression LESS Expression .)
    RPAREN          reduce using rule 48 (Condition -> Expression LESS Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59

  ! ADD             [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! SUB             [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! OR              [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! GREATER         [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! LESS            [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! GREATERE        [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! LESSE           [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! EQUAL           [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! NEQUAL          [ reduce using rule 48 (Condition -> Expression LESS Expression .) ]
  ! MULT            [ reduce using rule 53 (Condition -> Expression .) ]
  ! DIV             [ reduce using rule 53 (Condition -> Expression .) ]
  ! MOD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! AND             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]
  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! LSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! RPAREN          [ reduce using rule 53 (Condition -> Expression .) ]


state 80

    (49) Condition -> Expression GREATERE Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for MULT resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for DIV resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for AND resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for IF resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for $end resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for END resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 49 (Condition -> Expression GREATERE Expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (Condition -> Expression GREATERE Expression .)
    NAME            reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    IF              reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    WHILE           reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    WRITES          reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    WRITEI          reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    $end            reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    MULT            reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    DIV             reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    MOD             reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    AND             reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    END             reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    ELSE            reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    RSBRACKET       reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    LSBRACKET       reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    RPAREN          reduce using rule 49 (Condition -> Expression GREATERE Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59

  ! ADD             [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! SUB             [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! OR              [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! GREATER         [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! LESS            [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! GREATERE        [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! LESSE           [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! EQUAL           [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! NEQUAL          [ reduce using rule 49 (Condition -> Expression GREATERE Expression .) ]
  ! MULT            [ reduce using rule 53 (Condition -> Expression .) ]
  ! DIV             [ reduce using rule 53 (Condition -> Expression .) ]
  ! MOD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! AND             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]
  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! LSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! RPAREN          [ reduce using rule 53 (Condition -> Expression .) ]


state 81

    (50) Condition -> Expression LESSE Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for MULT resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for DIV resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for MOD resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for AND resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for IF resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for $end resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for END resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 50 (Condition -> Expression LESSE Expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 50 (Condition -> Expression LESSE Expression .)
    NAME            reduce using rule 50 (Condition -> Expression LESSE Expression .)
    IF              reduce using rule 50 (Condition -> Expression LESSE Expression .)
    WHILE           reduce using rule 50 (Condition -> Expression LESSE Expression .)
    WRITES          reduce using rule 50 (Condition -> Expression LESSE Expression .)
    WRITEI          reduce using rule 50 (Condition -> Expression LESSE Expression .)
    $end            reduce using rule 50 (Condition -> Expression LESSE Expression .)
    MULT            reduce using rule 50 (Condition -> Expression LESSE Expression .)
    DIV             reduce using rule 50 (Condition -> Expression LESSE Expression .)
    MOD             reduce using rule 50 (Condition -> Expression LESSE Expression .)
    AND             reduce using rule 50 (Condition -> Expression LESSE Expression .)
    END             reduce using rule 50 (Condition -> Expression LESSE Expression .)
    ELSE            reduce using rule 50 (Condition -> Expression LESSE Expression .)
    RSBRACKET       reduce using rule 50 (Condition -> Expression LESSE Expression .)
    LSBRACKET       reduce using rule 50 (Condition -> Expression LESSE Expression .)
    RPAREN          reduce using rule 50 (Condition -> Expression LESSE Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59

  ! ADD             [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! SUB             [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! OR              [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! GREATER         [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! LESS            [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! GREATERE        [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! LESSE           [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! EQUAL           [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! NEQUAL          [ reduce using rule 50 (Condition -> Expression LESSE Expression .) ]
  ! MULT            [ reduce using rule 53 (Condition -> Expression .) ]
  ! DIV             [ reduce using rule 53 (Condition -> Expression .) ]
  ! MOD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! AND             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]
  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! LSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! RPAREN          [ reduce using rule 53 (Condition -> Expression .) ]


state 82

    (51) Condition -> Expression EQUAL Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for MULT resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for DIV resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for MOD resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for AND resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for IF resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for $end resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for END resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 51 (Condition -> Expression EQUAL Expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 51 (Condition -> Expression EQUAL Expression .)
    NAME            reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    IF              reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    WHILE           reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    WRITES          reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    WRITEI          reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    $end            reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    MULT            reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    DIV             reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    MOD             reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    AND             reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    END             reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    ELSE            reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    RSBRACKET       reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    LSBRACKET       reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    RPAREN          reduce using rule 51 (Condition -> Expression EQUAL Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59

  ! ADD             [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! SUB             [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! OR              [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! GREATER         [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! LESS            [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! GREATERE        [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! LESSE           [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! EQUAL           [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! NEQUAL          [ reduce using rule 51 (Condition -> Expression EQUAL Expression .) ]
  ! MULT            [ reduce using rule 53 (Condition -> Expression .) ]
  ! DIV             [ reduce using rule 53 (Condition -> Expression .) ]
  ! MOD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! AND             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]
  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! LSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! RPAREN          [ reduce using rule 53 (Condition -> Expression .) ]


state 83

    (52) Condition -> Expression NEQUAL Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for MULT resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for DIV resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for MOD resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for AND resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for IF resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for $end resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for END resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 52 (Condition -> Expression NEQUAL Expression .)
    NAME            reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    IF              reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    WHILE           reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    WRITES          reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    WRITEI          reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    $end            reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    MULT            reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    DIV             reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    MOD             reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    AND             reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    END             reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    ELSE            reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    RSBRACKET       reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    LSBRACKET       reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    RPAREN          reduce using rule 52 (Condition -> Expression NEQUAL Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59

  ! ADD             [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! SUB             [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! OR              [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! GREATER         [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! LESS            [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! GREATERE        [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! LESSE           [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! EQUAL           [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! NEQUAL          [ reduce using rule 52 (Condition -> Expression NEQUAL Expression .) ]
  ! MULT            [ reduce using rule 53 (Condition -> Expression .) ]
  ! DIV             [ reduce using rule 53 (Condition -> Expression .) ]
  ! MOD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! AND             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]
  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! LSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! RPAREN          [ reduce using rule 53 (Condition -> Expression .) ]


state 84

    (37) Term -> Term MULT Factor .
    (41) Term -> Factor .

  ! reduce/reduce conflict for MULT resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for DIV resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for MOD resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for AND resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for ADD resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for SUB resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for OR resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for GREATER resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for LESS resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for GREATERE resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for LESSE resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for EQUAL resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for NEQUAL resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for NAME resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for IF resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for WRITES resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for WRITEI resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for $end resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for END resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for ELSE resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 37 (Term -> Term MULT Factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 37 (Term -> Term MULT Factor .)
    ADD             reduce using rule 37 (Term -> Term MULT Factor .)
    SUB             reduce using rule 37 (Term -> Term MULT Factor .)
    OR              reduce using rule 37 (Term -> Term MULT Factor .)
    GREATER         reduce using rule 37 (Term -> Term MULT Factor .)
    LESS            reduce using rule 37 (Term -> Term MULT Factor .)
    GREATERE        reduce using rule 37 (Term -> Term MULT Factor .)
    LESSE           reduce using rule 37 (Term -> Term MULT Factor .)
    EQUAL           reduce using rule 37 (Term -> Term MULT Factor .)
    NEQUAL          reduce using rule 37 (Term -> Term MULT Factor .)
    NAME            reduce using rule 37 (Term -> Term MULT Factor .)
    IF              reduce using rule 37 (Term -> Term MULT Factor .)
    WHILE           reduce using rule 37 (Term -> Term MULT Factor .)
    WRITES          reduce using rule 37 (Term -> Term MULT Factor .)
    WRITEI          reduce using rule 37 (Term -> Term MULT Factor .)
    $end            reduce using rule 37 (Term -> Term MULT Factor .)
    MULT            reduce using rule 37 (Term -> Term MULT Factor .)
    DIV             reduce using rule 37 (Term -> Term MULT Factor .)
    MOD             reduce using rule 37 (Term -> Term MULT Factor .)
    AND             reduce using rule 37 (Term -> Term MULT Factor .)
    END             reduce using rule 37 (Term -> Term MULT Factor .)
    ELSE            reduce using rule 37 (Term -> Term MULT Factor .)
    RSBRACKET       reduce using rule 37 (Term -> Term MULT Factor .)
    LSBRACKET       reduce using rule 37 (Term -> Term MULT Factor .)
    RPAREN          reduce using rule 37 (Term -> Term MULT Factor .)

  ! MULT            [ reduce using rule 41 (Term -> Factor .) ]
  ! DIV             [ reduce using rule 41 (Term -> Factor .) ]
  ! MOD             [ reduce using rule 41 (Term -> Factor .) ]
  ! AND             [ reduce using rule 41 (Term -> Factor .) ]
  ! ADD             [ reduce using rule 41 (Term -> Factor .) ]
  ! SUB             [ reduce using rule 41 (Term -> Factor .) ]
  ! OR              [ reduce using rule 41 (Term -> Factor .) ]
  ! GREATER         [ reduce using rule 41 (Term -> Factor .) ]
  ! LESS            [ reduce using rule 41 (Term -> Factor .) ]
  ! GREATERE        [ reduce using rule 41 (Term -> Factor .) ]
  ! LESSE           [ reduce using rule 41 (Term -> Factor .) ]
  ! EQUAL           [ reduce using rule 41 (Term -> Factor .) ]
  ! NEQUAL          [ reduce using rule 41 (Term -> Factor .) ]
  ! NAME            [ reduce using rule 41 (Term -> Factor .) ]
  ! IF              [ reduce using rule 41 (Term -> Factor .) ]
  ! WHILE           [ reduce using rule 41 (Term -> Factor .) ]
  ! WRITES          [ reduce using rule 41 (Term -> Factor .) ]
  ! WRITEI          [ reduce using rule 41 (Term -> Factor .) ]
  ! $end            [ reduce using rule 41 (Term -> Factor .) ]
  ! END             [ reduce using rule 41 (Term -> Factor .) ]
  ! ELSE            [ reduce using rule 41 (Term -> Factor .) ]
  ! RSBRACKET       [ reduce using rule 41 (Term -> Factor .) ]
  ! LSBRACKET       [ reduce using rule 41 (Term -> Factor .) ]
  ! RPAREN          [ reduce using rule 41 (Term -> Factor .) ]


state 85

    (38) Term -> Term DIV Factor .
    (41) Term -> Factor .

  ! reduce/reduce conflict for MULT resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for DIV resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for MOD resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for AND resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for ADD resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for SUB resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for OR resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for GREATER resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for LESS resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for GREATERE resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for LESSE resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for EQUAL resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for NEQUAL resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for NAME resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for IF resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for WRITES resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for WRITEI resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for $end resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for END resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for ELSE resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 38 (Term -> Term DIV Factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 38 (Term -> Term DIV Factor .)
    ADD             reduce using rule 38 (Term -> Term DIV Factor .)
    SUB             reduce using rule 38 (Term -> Term DIV Factor .)
    OR              reduce using rule 38 (Term -> Term DIV Factor .)
    GREATER         reduce using rule 38 (Term -> Term DIV Factor .)
    LESS            reduce using rule 38 (Term -> Term DIV Factor .)
    GREATERE        reduce using rule 38 (Term -> Term DIV Factor .)
    LESSE           reduce using rule 38 (Term -> Term DIV Factor .)
    EQUAL           reduce using rule 38 (Term -> Term DIV Factor .)
    NEQUAL          reduce using rule 38 (Term -> Term DIV Factor .)
    NAME            reduce using rule 38 (Term -> Term DIV Factor .)
    IF              reduce using rule 38 (Term -> Term DIV Factor .)
    WHILE           reduce using rule 38 (Term -> Term DIV Factor .)
    WRITES          reduce using rule 38 (Term -> Term DIV Factor .)
    WRITEI          reduce using rule 38 (Term -> Term DIV Factor .)
    $end            reduce using rule 38 (Term -> Term DIV Factor .)
    MULT            reduce using rule 38 (Term -> Term DIV Factor .)
    DIV             reduce using rule 38 (Term -> Term DIV Factor .)
    MOD             reduce using rule 38 (Term -> Term DIV Factor .)
    AND             reduce using rule 38 (Term -> Term DIV Factor .)
    END             reduce using rule 38 (Term -> Term DIV Factor .)
    ELSE            reduce using rule 38 (Term -> Term DIV Factor .)
    RSBRACKET       reduce using rule 38 (Term -> Term DIV Factor .)
    LSBRACKET       reduce using rule 38 (Term -> Term DIV Factor .)
    RPAREN          reduce using rule 38 (Term -> Term DIV Factor .)

  ! MULT            [ reduce using rule 41 (Term -> Factor .) ]
  ! DIV             [ reduce using rule 41 (Term -> Factor .) ]
  ! MOD             [ reduce using rule 41 (Term -> Factor .) ]
  ! AND             [ reduce using rule 41 (Term -> Factor .) ]
  ! ADD             [ reduce using rule 41 (Term -> Factor .) ]
  ! SUB             [ reduce using rule 41 (Term -> Factor .) ]
  ! OR              [ reduce using rule 41 (Term -> Factor .) ]
  ! GREATER         [ reduce using rule 41 (Term -> Factor .) ]
  ! LESS            [ reduce using rule 41 (Term -> Factor .) ]
  ! GREATERE        [ reduce using rule 41 (Term -> Factor .) ]
  ! LESSE           [ reduce using rule 41 (Term -> Factor .) ]
  ! EQUAL           [ reduce using rule 41 (Term -> Factor .) ]
  ! NEQUAL          [ reduce using rule 41 (Term -> Factor .) ]
  ! NAME            [ reduce using rule 41 (Term -> Factor .) ]
  ! IF              [ reduce using rule 41 (Term -> Factor .) ]
  ! WHILE           [ reduce using rule 41 (Term -> Factor .) ]
  ! WRITES          [ reduce using rule 41 (Term -> Factor .) ]
  ! WRITEI          [ reduce using rule 41 (Term -> Factor .) ]
  ! $end            [ reduce using rule 41 (Term -> Factor .) ]
  ! END             [ reduce using rule 41 (Term -> Factor .) ]
  ! ELSE            [ reduce using rule 41 (Term -> Factor .) ]
  ! RSBRACKET       [ reduce using rule 41 (Term -> Factor .) ]
  ! LSBRACKET       [ reduce using rule 41 (Term -> Factor .) ]
  ! RPAREN          [ reduce using rule 41 (Term -> Factor .) ]


state 86

    (39) Term -> Term MOD Factor .
    (41) Term -> Factor .

  ! reduce/reduce conflict for MULT resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for DIV resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for MOD resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for AND resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for ADD resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for SUB resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for OR resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for GREATER resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for LESS resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for GREATERE resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for LESSE resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for EQUAL resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for NEQUAL resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for NAME resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for IF resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for WRITES resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for WRITEI resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for $end resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for END resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 39 (Term -> Term MOD Factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 39 (Term -> Term MOD Factor .)
    ADD             reduce using rule 39 (Term -> Term MOD Factor .)
    SUB             reduce using rule 39 (Term -> Term MOD Factor .)
    OR              reduce using rule 39 (Term -> Term MOD Factor .)
    GREATER         reduce using rule 39 (Term -> Term MOD Factor .)
    LESS            reduce using rule 39 (Term -> Term MOD Factor .)
    GREATERE        reduce using rule 39 (Term -> Term MOD Factor .)
    LESSE           reduce using rule 39 (Term -> Term MOD Factor .)
    EQUAL           reduce using rule 39 (Term -> Term MOD Factor .)
    NEQUAL          reduce using rule 39 (Term -> Term MOD Factor .)
    NAME            reduce using rule 39 (Term -> Term MOD Factor .)
    IF              reduce using rule 39 (Term -> Term MOD Factor .)
    WHILE           reduce using rule 39 (Term -> Term MOD Factor .)
    WRITES          reduce using rule 39 (Term -> Term MOD Factor .)
    WRITEI          reduce using rule 39 (Term -> Term MOD Factor .)
    $end            reduce using rule 39 (Term -> Term MOD Factor .)
    MULT            reduce using rule 39 (Term -> Term MOD Factor .)
    DIV             reduce using rule 39 (Term -> Term MOD Factor .)
    MOD             reduce using rule 39 (Term -> Term MOD Factor .)
    AND             reduce using rule 39 (Term -> Term MOD Factor .)
    END             reduce using rule 39 (Term -> Term MOD Factor .)
    ELSE            reduce using rule 39 (Term -> Term MOD Factor .)
    RSBRACKET       reduce using rule 39 (Term -> Term MOD Factor .)
    LSBRACKET       reduce using rule 39 (Term -> Term MOD Factor .)
    RPAREN          reduce using rule 39 (Term -> Term MOD Factor .)

  ! MULT            [ reduce using rule 41 (Term -> Factor .) ]
  ! DIV             [ reduce using rule 41 (Term -> Factor .) ]
  ! MOD             [ reduce using rule 41 (Term -> Factor .) ]
  ! AND             [ reduce using rule 41 (Term -> Factor .) ]
  ! ADD             [ reduce using rule 41 (Term -> Factor .) ]
  ! SUB             [ reduce using rule 41 (Term -> Factor .) ]
  ! OR              [ reduce using rule 41 (Term -> Factor .) ]
  ! GREATER         [ reduce using rule 41 (Term -> Factor .) ]
  ! LESS            [ reduce using rule 41 (Term -> Factor .) ]
  ! GREATERE        [ reduce using rule 41 (Term -> Factor .) ]
  ! LESSE           [ reduce using rule 41 (Term -> Factor .) ]
  ! EQUAL           [ reduce using rule 41 (Term -> Factor .) ]
  ! NEQUAL          [ reduce using rule 41 (Term -> Factor .) ]
  ! NAME            [ reduce using rule 41 (Term -> Factor .) ]
  ! IF              [ reduce using rule 41 (Term -> Factor .) ]
  ! WHILE           [ reduce using rule 41 (Term -> Factor .) ]
  ! WRITES          [ reduce using rule 41 (Term -> Factor .) ]
  ! WRITEI          [ reduce using rule 41 (Term -> Factor .) ]
  ! $end            [ reduce using rule 41 (Term -> Factor .) ]
  ! END             [ reduce using rule 41 (Term -> Factor .) ]
  ! ELSE            [ reduce using rule 41 (Term -> Factor .) ]
  ! RSBRACKET       [ reduce using rule 41 (Term -> Factor .) ]
  ! LSBRACKET       [ reduce using rule 41 (Term -> Factor .) ]
  ! RPAREN          [ reduce using rule 41 (Term -> Factor .) ]


state 87

    (40) Term -> Term AND Factor .
    (41) Term -> Factor .

  ! reduce/reduce conflict for MULT resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for DIV resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for MOD resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for AND resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for ADD resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for SUB resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for OR resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for LESS resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for GREATERE resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for LESSE resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for NEQUAL resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for NAME resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for IF resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for WRITES resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for WRITEI resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for $end resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for END resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for ELSE resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for RSBRACKET resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for LSBRACKET resolved using rule 40 (Term -> Term AND Factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (Term -> Term AND Factor .)
    ADD             reduce using rule 40 (Term -> Term AND Factor .)
    SUB             reduce using rule 40 (Term -> Term AND Factor .)
    OR              reduce using rule 40 (Term -> Term AND Factor .)
    GREATER         reduce using rule 40 (Term -> Term AND Factor .)
    LESS            reduce using rule 40 (Term -> Term AND Factor .)
    GREATERE        reduce using rule 40 (Term -> Term AND Factor .)
    LESSE           reduce using rule 40 (Term -> Term AND Factor .)
    EQUAL           reduce using rule 40 (Term -> Term AND Factor .)
    NEQUAL          reduce using rule 40 (Term -> Term AND Factor .)
    NAME            reduce using rule 40 (Term -> Term AND Factor .)
    IF              reduce using rule 40 (Term -> Term AND Factor .)
    WHILE           reduce using rule 40 (Term -> Term AND Factor .)
    WRITES          reduce using rule 40 (Term -> Term AND Factor .)
    WRITEI          reduce using rule 40 (Term -> Term AND Factor .)
    $end            reduce using rule 40 (Term -> Term AND Factor .)
    MULT            reduce using rule 40 (Term -> Term AND Factor .)
    DIV             reduce using rule 40 (Term -> Term AND Factor .)
    MOD             reduce using rule 40 (Term -> Term AND Factor .)
    AND             reduce using rule 40 (Term -> Term AND Factor .)
    END             reduce using rule 40 (Term -> Term AND Factor .)
    ELSE            reduce using rule 40 (Term -> Term AND Factor .)
    RSBRACKET       reduce using rule 40 (Term -> Term AND Factor .)
    LSBRACKET       reduce using rule 40 (Term -> Term AND Factor .)
    RPAREN          reduce using rule 40 (Term -> Term AND Factor .)

  ! MULT            [ reduce using rule 41 (Term -> Factor .) ]
  ! DIV             [ reduce using rule 41 (Term -> Factor .) ]
  ! MOD             [ reduce using rule 41 (Term -> Factor .) ]
  ! AND             [ reduce using rule 41 (Term -> Factor .) ]
  ! ADD             [ reduce using rule 41 (Term -> Factor .) ]
  ! SUB             [ reduce using rule 41 (Term -> Factor .) ]
  ! OR              [ reduce using rule 41 (Term -> Factor .) ]
  ! GREATER         [ reduce using rule 41 (Term -> Factor .) ]
  ! LESS            [ reduce using rule 41 (Term -> Factor .) ]
  ! GREATERE        [ reduce using rule 41 (Term -> Factor .) ]
  ! LESSE           [ reduce using rule 41 (Term -> Factor .) ]
  ! EQUAL           [ reduce using rule 41 (Term -> Factor .) ]
  ! NEQUAL          [ reduce using rule 41 (Term -> Factor .) ]
  ! NAME            [ reduce using rule 41 (Term -> Factor .) ]
  ! IF              [ reduce using rule 41 (Term -> Factor .) ]
  ! WHILE           [ reduce using rule 41 (Term -> Factor .) ]
  ! WRITES          [ reduce using rule 41 (Term -> Factor .) ]
  ! WRITEI          [ reduce using rule 41 (Term -> Factor .) ]
  ! $end            [ reduce using rule 41 (Term -> Factor .) ]
  ! END             [ reduce using rule 41 (Term -> Factor .) ]
  ! ELSE            [ reduce using rule 41 (Term -> Factor .) ]
  ! RSBRACKET       [ reduce using rule 41 (Term -> Factor .) ]
  ! LSBRACKET       [ reduce using rule 41 (Term -> Factor .) ]
  ! RPAREN          [ reduce using rule 41 (Term -> Factor .) ]


state 88

    (44) Factor -> LPAREN Expression RPAREN .

    ADD             reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    OR              reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    GREATER         reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    LESS            reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    GREATERE        reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    LESSE           reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    NEQUAL          reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    NAME            reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    IF              reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    WHILE           reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    WRITES          reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    WRITEI          reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    $end            reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    MULT            reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    AND             reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    END             reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    ELSE            reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    RSBRACKET       reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    LSBRACKET       reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 44 (Factor -> LPAREN Expression RPAREN .)


state 89

    (46) Factor -> NOT LPAREN Condition . RPAREN
    (45) Factor -> Condition .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 98
    MULT            reduce using rule 45 (Factor -> Condition .)
    DIV             reduce using rule 45 (Factor -> Condition .)
    MOD             reduce using rule 45 (Factor -> Condition .)
    AND             reduce using rule 45 (Factor -> Condition .)
    GREATER         reduce using rule 45 (Factor -> Condition .)
    LESS            reduce using rule 45 (Factor -> Condition .)
    GREATERE        reduce using rule 45 (Factor -> Condition .)
    LESSE           reduce using rule 45 (Factor -> Condition .)
    EQUAL           reduce using rule 45 (Factor -> Condition .)
    NEQUAL          reduce using rule 45 (Factor -> Condition .)
    ADD             reduce using rule 45 (Factor -> Condition .)
    SUB             reduce using rule 45 (Factor -> Condition .)
    OR              reduce using rule 45 (Factor -> Condition .)

  ! RPAREN          [ reduce using rule 45 (Factor -> Condition .) ]


state 90

    (27) Attribution -> NAME LSBRACKET Expression LSBRACKET Expression . RSBRACKET ATR READ
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for RSBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    RSBRACKET       shift and go to state 99
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]


state 91

    (24) Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET . Expression RSBRACKET ATR Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 100
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 92

    (23) Attribution -> NAME LSBRACKET Expression RSBRACKET ATR . Expression
    (26) Attribution -> NAME LSBRACKET Expression RSBRACKET ATR . READ
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    READ            shift and go to state 102
    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 101
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 93

    (8) Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .
    (9) Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET . ATR LPAREN List RPAREN

    INT             reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    ARRAY           reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    MATRIX          reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    NAME            reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    IF              reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    WHILE           reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    WRITES          reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    WRITEI          reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    $end            reduce using rule 8 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET .)
    ATR             shift and go to state 103


state 94

    (10) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET . LSBRACKET NUM RSBRACKET
    (11) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET . LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN

    LSBRACKET       shift and go to state 104


state 95

    (28) If -> IF LPAREN Condition RPAREN THEN . Body END
    (29) If -> IF LPAREN Condition RPAREN THEN . Body ELSE Body END
    (16) Body -> . Statement
    (17) Body -> . Body Statement
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Body                           shift and go to state 105
    Statement                      shift and go to state 4
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 96

    (30) While -> WHILE LPAREN Condition RPAREN DO . Body END
    (16) Body -> . Statement
    (17) Body -> . Body Statement
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Body                           shift and go to state 106
    Statement                      shift and go to state 4
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 97

    (54) Variable -> NAME LSBRACKET Expression RSBRACKET .
    (55) Variable -> NAME LSBRACKET Expression RSBRACKET . LSBRACKET Expression RSBRACKET

  ! shift/reduce conflict for LSBRACKET resolved as shift
    ADD             reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    SUB             reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    OR              reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    GREATER         reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    LESS            reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    GREATERE        reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    LESSE           reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    EQUAL           reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    NEQUAL          reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    NAME            reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    IF              reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    WHILE           reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    WRITES          reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    WRITEI          reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    $end            reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    MULT            reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    DIV             reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    MOD             reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    AND             reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    END             reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    ELSE            reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    RSBRACKET       reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    RPAREN          reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .)
    LSBRACKET       shift and go to state 107

  ! LSBRACKET       [ reduce using rule 54 (Variable -> NAME LSBRACKET Expression RSBRACKET .) ]


state 98

    (46) Factor -> NOT LPAREN Condition RPAREN .

    ADD             reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    SUB             reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    OR              reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    GREATER         reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    LESS            reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    GREATERE        reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    LESSE           reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    EQUAL           reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    NEQUAL          reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    NAME            reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    IF              reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    WHILE           reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    WRITES          reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    WRITEI          reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    $end            reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    MULT            reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    DIV             reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    MOD             reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    AND             reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    END             reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    ELSE            reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    RSBRACKET       reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    LSBRACKET       reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)
    RPAREN          reduce using rule 46 (Factor -> NOT LPAREN Condition RPAREN .)


state 99

    (27) Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET . ATR READ

    ATR             shift and go to state 108


state 100

    (24) Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression . RSBRACKET ATR Expression
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for RSBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    RSBRACKET       shift and go to state 109
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]


state 101

    (23) Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for IF resolved using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for $end resolved using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for END resolved using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    NAME            reduce using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    IF              reduce using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    WHILE           reduce using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    WRITES          reduce using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    WRITEI          reduce using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    $end            reduce using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    END             reduce using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    ELSE            reduce using rule 23 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]


state 102

    (26) Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .

    NAME            reduce using rule 26 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .)
    IF              reduce using rule 26 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .)
    WHILE           reduce using rule 26 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .)
    WRITES          reduce using rule 26 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .)
    WRITEI          reduce using rule 26 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .)
    $end            reduce using rule 26 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .)
    END             reduce using rule 26 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .)
    ELSE            reduce using rule 26 (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR READ .)


state 103

    (9) Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR . LPAREN List RPAREN

    LPAREN          shift and go to state 110


state 104

    (10) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET . NUM RSBRACKET
    (11) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET . NUM RSBRACKET ATR LPAREN ListOfLists RPAREN

    NUM             shift and go to state 111


state 105

    (28) If -> IF LPAREN Condition RPAREN THEN Body . END
    (29) If -> IF LPAREN Condition RPAREN THEN Body . ELSE Body END
    (17) Body -> Body . Statement
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    END             shift and go to state 112
    ELSE            shift and go to state 113
    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Statement                      shift and go to state 18
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 106

    (30) While -> WHILE LPAREN Condition RPAREN DO Body . END
    (17) Body -> Body . Statement
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    END             shift and go to state 114
    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Statement                      shift and go to state 18
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 107

    (55) Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET . Expression RSBRACKET
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 115
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 108

    (27) Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR . READ

    READ            shift and go to state 116


state 109

    (24) Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET . ATR Expression

    ATR             shift and go to state 117


state 110

    (9) Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN . List RPAREN
    (12) List -> . NUM COMMA List
    (13) List -> . NUM

    NUM             shift and go to state 118

    List                           shift and go to state 119

state 111

    (10) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM . RSBRACKET
    (11) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM . RSBRACKET ATR LPAREN ListOfLists RPAREN

    RSBRACKET       shift and go to state 120


state 112

    (28) If -> IF LPAREN Condition RPAREN THEN Body END .

    NAME            reduce using rule 28 (If -> IF LPAREN Condition RPAREN THEN Body END .)
    IF              reduce using rule 28 (If -> IF LPAREN Condition RPAREN THEN Body END .)
    WHILE           reduce using rule 28 (If -> IF LPAREN Condition RPAREN THEN Body END .)
    WRITES          reduce using rule 28 (If -> IF LPAREN Condition RPAREN THEN Body END .)
    WRITEI          reduce using rule 28 (If -> IF LPAREN Condition RPAREN THEN Body END .)
    $end            reduce using rule 28 (If -> IF LPAREN Condition RPAREN THEN Body END .)
    END             reduce using rule 28 (If -> IF LPAREN Condition RPAREN THEN Body END .)
    ELSE            reduce using rule 28 (If -> IF LPAREN Condition RPAREN THEN Body END .)


state 113

    (29) If -> IF LPAREN Condition RPAREN THEN Body ELSE . Body END
    (16) Body -> . Statement
    (17) Body -> . Body Statement
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Body                           shift and go to state 121
    Statement                      shift and go to state 4
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 114

    (30) While -> WHILE LPAREN Condition RPAREN DO Body END .

    NAME            reduce using rule 30 (While -> WHILE LPAREN Condition RPAREN DO Body END .)
    IF              reduce using rule 30 (While -> WHILE LPAREN Condition RPAREN DO Body END .)
    WHILE           reduce using rule 30 (While -> WHILE LPAREN Condition RPAREN DO Body END .)
    WRITES          reduce using rule 30 (While -> WHILE LPAREN Condition RPAREN DO Body END .)
    WRITEI          reduce using rule 30 (While -> WHILE LPAREN Condition RPAREN DO Body END .)
    $end            reduce using rule 30 (While -> WHILE LPAREN Condition RPAREN DO Body END .)
    END             reduce using rule 30 (While -> WHILE LPAREN Condition RPAREN DO Body END .)
    ELSE            reduce using rule 30 (While -> WHILE LPAREN Condition RPAREN DO Body END .)


state 115

    (55) Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression . RSBRACKET
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for RSBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    RSBRACKET       shift and go to state 122
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! RSBRACKET       [ reduce using rule 53 (Condition -> Expression .) ]
  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]


state 116

    (27) Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .

    NAME            reduce using rule 27 (Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .)
    IF              reduce using rule 27 (Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .)
    WHILE           reduce using rule 27 (Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .)
    WRITES          reduce using rule 27 (Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .)
    WRITEI          reduce using rule 27 (Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .)
    $end            reduce using rule 27 (Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .)
    END             reduce using rule 27 (Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .)
    ELSE            reduce using rule 27 (Attribution -> NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ .)


state 117

    (24) Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR . Expression
    (33) Expression -> . Expression ADD Term
    (34) Expression -> . Expression SUB Term
    (35) Expression -> . Expression OR Term
    (36) Expression -> . Term
    (37) Term -> . Term MULT Factor
    (38) Term -> . Term DIV Factor
    (39) Term -> . Term MOD Factor
    (40) Term -> . Term AND Factor
    (41) Term -> . Factor
    (42) Factor -> . NUM
    (43) Factor -> . Variable
    (44) Factor -> . LPAREN Expression RPAREN
    (45) Factor -> . Condition
    (46) Factor -> . NOT LPAREN Condition RPAREN
    (54) Variable -> . NAME LSBRACKET Expression RSBRACKET
    (55) Variable -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET
    (56) Variable -> . NAME
    (47) Condition -> . Expression GREATER Expression
    (48) Condition -> . Expression LESS Expression
    (49) Condition -> . Expression GREATERE Expression
    (50) Condition -> . Expression LESSE Expression
    (51) Condition -> . Expression EQUAL Expression
    (52) Condition -> . Expression NEQUAL Expression
    (53) Condition -> . Expression

    NUM             shift and go to state 36
    LPAREN          shift and go to state 38
    NOT             shift and go to state 40
    NAME            shift and go to state 31

    Expression                     shift and go to state 123
    Term                           shift and go to state 34
    Factor                         shift and go to state 35
    Variable                       shift and go to state 37
    Condition                      shift and go to state 39

state 118

    (12) List -> NUM . COMMA List
    (13) List -> NUM .

    COMMA           shift and go to state 124
    RPAREN          reduce using rule 13 (List -> NUM .)


state 119

    (9) Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List . RPAREN

    RPAREN          shift and go to state 125


state 120

    (10) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .
    (11) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET . ATR LPAREN ListOfLists RPAREN

    INT             reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    ARRAY           reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    MATRIX          reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    NAME            reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    IF              reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    WHILE           reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    WRITES          reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    WRITEI          reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    $end            reduce using rule 10 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET .)
    ATR             shift and go to state 126


state 121

    (29) If -> IF LPAREN Condition RPAREN THEN Body ELSE Body . END
    (17) Body -> Body . Statement
    (18) Statement -> . Attribution
    (19) Statement -> . If
    (20) Statement -> . While
    (21) Statement -> . Write
    (22) Attribution -> . NAME ATR Expression
    (23) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR Expression
    (24) Attribution -> . NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression
    (25) Attribution -> . NAME ATR READ
    (26) Attribution -> . NAME LSBRACKET Expression RSBRACKET ATR READ
    (27) Attribution -> . NAME LSBRACKET Expression LSBRACKET Expression RSBRACKET ATR READ
    (28) If -> . IF LPAREN Condition RPAREN THEN Body END
    (29) If -> . IF LPAREN Condition RPAREN THEN Body ELSE Body END
    (30) While -> . WHILE LPAREN Condition RPAREN DO Body END
    (31) Write -> . WRITES LPAREN STRING RPAREN
    (32) Write -> . WRITEI LPAREN Expression RPAREN

    END             shift and go to state 127
    NAME            shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    WRITES          shift and go to state 16
    WRITEI          shift and go to state 17

    Statement                      shift and go to state 18
    Attribution                    shift and go to state 6
    If                             shift and go to state 7
    While                          shift and go to state 8
    Write                          shift and go to state 9

state 122

    (55) Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .

    ADD             reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    SUB             reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    OR              reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    GREATER         reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    LESS            reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    GREATERE        reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    LESSE           reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    EQUAL           reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    NEQUAL          reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    NAME            reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    IF              reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    WHILE           reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    WRITES          reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    WRITEI          reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    $end            reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    MULT            reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    DIV             reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    MOD             reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    AND             reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    END             reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    ELSE            reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    RSBRACKET       reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    LSBRACKET       reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)
    RPAREN          reduce using rule 55 (Variable -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET .)


state 123

    (24) Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .
    (33) Expression -> Expression . ADD Term
    (34) Expression -> Expression . SUB Term
    (35) Expression -> Expression . OR Term
    (47) Condition -> Expression . GREATER Expression
    (48) Condition -> Expression . LESS Expression
    (49) Condition -> Expression . GREATERE Expression
    (50) Condition -> Expression . LESSE Expression
    (51) Condition -> Expression . EQUAL Expression
    (52) Condition -> Expression . NEQUAL Expression
    (53) Condition -> Expression .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATERE resolved as shift
  ! shift/reduce conflict for LESSE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for IF resolved using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for WRITES resolved using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for WRITEI resolved using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for $end resolved using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for END resolved using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    NAME            reduce using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    IF              reduce using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    WHILE           reduce using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    WRITES          reduce using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    WRITEI          reduce using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    $end            reduce using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    END             reduce using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    ELSE            reduce using rule 24 (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression .)
    ADD             shift and go to state 51
    SUB             shift and go to state 52
    OR              shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    GREATERE        shift and go to state 56
    LESSE           shift and go to state 57
    EQUAL           shift and go to state 58
    NEQUAL          shift and go to state 59
    MULT            reduce using rule 53 (Condition -> Expression .)
    DIV             reduce using rule 53 (Condition -> Expression .)
    MOD             reduce using rule 53 (Condition -> Expression .)
    AND             reduce using rule 53 (Condition -> Expression .)

  ! ADD             [ reduce using rule 53 (Condition -> Expression .) ]
  ! SUB             [ reduce using rule 53 (Condition -> Expression .) ]
  ! OR              [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATER         [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESS            [ reduce using rule 53 (Condition -> Expression .) ]
  ! GREATERE        [ reduce using rule 53 (Condition -> Expression .) ]
  ! LESSE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! EQUAL           [ reduce using rule 53 (Condition -> Expression .) ]
  ! NEQUAL          [ reduce using rule 53 (Condition -> Expression .) ]
  ! NAME            [ reduce using rule 53 (Condition -> Expression .) ]
  ! IF              [ reduce using rule 53 (Condition -> Expression .) ]
  ! WHILE           [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITES          [ reduce using rule 53 (Condition -> Expression .) ]
  ! WRITEI          [ reduce using rule 53 (Condition -> Expression .) ]
  ! $end            [ reduce using rule 53 (Condition -> Expression .) ]
  ! END             [ reduce using rule 53 (Condition -> Expression .) ]
  ! ELSE            [ reduce using rule 53 (Condition -> Expression .) ]


state 124

    (12) List -> NUM COMMA . List
    (12) List -> . NUM COMMA List
    (13) List -> . NUM

    NUM             shift and go to state 118

    List                           shift and go to state 128

state 125

    (9) Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .

    INT             reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)
    ARRAY           reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)
    MATRIX          reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)
    NAME            reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)
    IF              reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)
    WHILE           reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)
    WRITES          reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)
    WRITEI          reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)
    $end            reduce using rule 9 (Declare -> ARRAY NAME LSBRACKET NUM RSBRACKET ATR LPAREN List RPAREN .)


state 126

    (11) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR . LPAREN ListOfLists RPAREN

    LPAREN          shift and go to state 129


state 127

    (29) If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .

    NAME            reduce using rule 29 (If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .)
    IF              reduce using rule 29 (If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .)
    WHILE           reduce using rule 29 (If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .)
    WRITES          reduce using rule 29 (If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .)
    WRITEI          reduce using rule 29 (If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .)
    $end            reduce using rule 29 (If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .)
    END             reduce using rule 29 (If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .)
    ELSE            reduce using rule 29 (If -> IF LPAREN Condition RPAREN THEN Body ELSE Body END .)


state 128

    (12) List -> NUM COMMA List .

    RPAREN          reduce using rule 12 (List -> NUM COMMA List .)


state 129

    (11) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN . ListOfLists RPAREN
    (14) ListOfLists -> . LPAREN List RPAREN COMMA ListOfLists
    (15) ListOfLists -> . LPAREN List RPAREN

    LPAREN          shift and go to state 130

    ListOfLists                    shift and go to state 131

state 130

    (14) ListOfLists -> LPAREN . List RPAREN COMMA ListOfLists
    (15) ListOfLists -> LPAREN . List RPAREN
    (12) List -> . NUM COMMA List
    (13) List -> . NUM

    NUM             shift and go to state 118

    List                           shift and go to state 132

state 131

    (11) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists . RPAREN

    RPAREN          shift and go to state 133


state 132

    (14) ListOfLists -> LPAREN List . RPAREN COMMA ListOfLists
    (15) ListOfLists -> LPAREN List . RPAREN

    RPAREN          shift and go to state 134


state 133

    (11) Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .

    INT             reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)
    ARRAY           reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)
    MATRIX          reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)
    NAME            reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)
    IF              reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)
    WHILE           reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)
    WRITES          reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)
    WRITEI          reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)
    $end            reduce using rule 11 (Declare -> MATRIX NAME LSBRACKET NUM RSBRACKET LSBRACKET NUM RSBRACKET ATR LPAREN ListOfLists RPAREN .)


state 134

    (14) ListOfLists -> LPAREN List RPAREN . COMMA ListOfLists
    (15) ListOfLists -> LPAREN List RPAREN .

    COMMA           shift and go to state 135
    RPAREN          reduce using rule 15 (ListOfLists -> LPAREN List RPAREN .)


state 135

    (14) ListOfLists -> LPAREN List RPAREN COMMA . ListOfLists
    (14) ListOfLists -> . LPAREN List RPAREN COMMA ListOfLists
    (15) ListOfLists -> . LPAREN List RPAREN

    LPAREN          shift and go to state 130

    ListOfLists                    shift and go to state 136

state 136

    (14) ListOfLists -> LPAREN List RPAREN COMMA ListOfLists .

    RPAREN          reduce using rule 14 (ListOfLists -> LPAREN List RPAREN COMMA ListOfLists .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LSBRACKET in state 31 resolved as shift
WARNING: shift/reduce conflict for ADD in state 32 resolved as shift
WARNING: shift/reduce conflict for SUB in state 32 resolved as shift
WARNING: shift/reduce conflict for OR in state 32 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 32 resolved as shift
WARNING: shift/reduce conflict for LESS in state 32 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 32 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 32 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 32 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 32 resolved as shift
WARNING: shift/reduce conflict for MULT in state 34 resolved as shift
WARNING: shift/reduce conflict for DIV in state 34 resolved as shift
WARNING: shift/reduce conflict for MOD in state 34 resolved as shift
WARNING: shift/reduce conflict for AND in state 34 resolved as shift
WARNING: shift/reduce conflict for RSBRACKET in state 41 resolved as shift
WARNING: shift/reduce conflict for LSBRACKET in state 41 resolved as shift
WARNING: shift/reduce conflict for ADD in state 41 resolved as shift
WARNING: shift/reduce conflict for SUB in state 41 resolved as shift
WARNING: shift/reduce conflict for OR in state 41 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 41 resolved as shift
WARNING: shift/reduce conflict for LESS in state 41 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 41 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 41 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 41 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 41 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 44 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 45 resolved as shift
WARNING: shift/reduce conflict for LESS in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 45 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 45 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for ADD in state 45 resolved as shift
WARNING: shift/reduce conflict for SUB in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 45 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 46 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 48 resolved as shift
WARNING: shift/reduce conflict for ADD in state 48 resolved as shift
WARNING: shift/reduce conflict for SUB in state 48 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 48 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 48 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 64 resolved as shift
WARNING: shift/reduce conflict for ADD in state 64 resolved as shift
WARNING: shift/reduce conflict for SUB in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 64 resolved as shift
WARNING: shift/reduce conflict for LESS in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 64 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for RSBRACKET in state 74 resolved as shift
WARNING: shift/reduce conflict for ADD in state 74 resolved as shift
WARNING: shift/reduce conflict for SUB in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 74 resolved as shift
WARNING: shift/reduce conflict for LESS in state 74 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 74 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for MULT in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for MOD in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for MULT in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for MOD in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for MULT in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for MOD in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for MULT in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for MOD in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for MULT in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for MOD in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for MULT in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for MOD in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for ADD in state 78 resolved as shift
WARNING: shift/reduce conflict for SUB in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 78 resolved as shift
WARNING: shift/reduce conflict for LESS in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 78 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 78 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for ADD in state 78 resolved as shift
WARNING: shift/reduce conflict for SUB in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 78 resolved as shift
WARNING: shift/reduce conflict for LESS in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 78 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 78 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for ADD in state 79 resolved as shift
WARNING: shift/reduce conflict for SUB in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 79 resolved as shift
WARNING: shift/reduce conflict for LESS in state 79 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 79 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 79 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for ADD in state 79 resolved as shift
WARNING: shift/reduce conflict for SUB in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 79 resolved as shift
WARNING: shift/reduce conflict for LESS in state 79 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 79 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 79 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for ADD in state 80 resolved as shift
WARNING: shift/reduce conflict for SUB in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 80 resolved as shift
WARNING: shift/reduce conflict for LESS in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 80 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 80 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for ADD in state 80 resolved as shift
WARNING: shift/reduce conflict for SUB in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 80 resolved as shift
WARNING: shift/reduce conflict for LESS in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 80 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 80 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for ADD in state 81 resolved as shift
WARNING: shift/reduce conflict for SUB in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 81 resolved as shift
WARNING: shift/reduce conflict for LESS in state 81 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 81 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 81 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for ADD in state 81 resolved as shift
WARNING: shift/reduce conflict for SUB in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 81 resolved as shift
WARNING: shift/reduce conflict for LESS in state 81 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 81 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 81 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for ADD in state 82 resolved as shift
WARNING: shift/reduce conflict for SUB in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 82 resolved as shift
WARNING: shift/reduce conflict for LESS in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 82 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 82 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for ADD in state 82 resolved as shift
WARNING: shift/reduce conflict for SUB in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 82 resolved as shift
WARNING: shift/reduce conflict for LESS in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 82 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 82 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for ADD in state 83 resolved as shift
WARNING: shift/reduce conflict for SUB in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 83 resolved as shift
WARNING: shift/reduce conflict for LESS in state 83 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 83 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 83 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for ADD in state 83 resolved as shift
WARNING: shift/reduce conflict for SUB in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 83 resolved as shift
WARNING: shift/reduce conflict for LESS in state 83 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 83 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 83 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 89 resolved as shift
WARNING: shift/reduce conflict for RSBRACKET in state 90 resolved as shift
WARNING: shift/reduce conflict for ADD in state 90 resolved as shift
WARNING: shift/reduce conflict for SUB in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 90 resolved as shift
WARNING: shift/reduce conflict for LESS in state 90 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 90 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 90 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for LSBRACKET in state 97 resolved as shift
WARNING: shift/reduce conflict for RSBRACKET in state 100 resolved as shift
WARNING: shift/reduce conflict for ADD in state 100 resolved as shift
WARNING: shift/reduce conflict for SUB in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 100 resolved as shift
WARNING: shift/reduce conflict for LESS in state 100 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 100 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 100 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for ADD in state 101 resolved as shift
WARNING: shift/reduce conflict for SUB in state 101 resolved as shift
WARNING: shift/reduce conflict for OR in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 101 resolved as shift
WARNING: shift/reduce conflict for LESS in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 101 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 101 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for RSBRACKET in state 115 resolved as shift
WARNING: shift/reduce conflict for ADD in state 115 resolved as shift
WARNING: shift/reduce conflict for SUB in state 115 resolved as shift
WARNING: shift/reduce conflict for OR in state 115 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 115 resolved as shift
WARNING: shift/reduce conflict for LESS in state 115 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 115 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 115 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for ADD in state 123 resolved as shift
WARNING: shift/reduce conflict for SUB in state 123 resolved as shift
WARNING: shift/reduce conflict for OR in state 123 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 123 resolved as shift
WARNING: shift/reduce conflict for LESS in state 123 resolved as shift
WARNING: shift/reduce conflict for GREATERE in state 123 resolved as shift
WARNING: shift/reduce conflict for LESSE in state 123 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 123 resolved as shift
WARNING: reduce/reduce conflict in state 32 resolved using rule (Attribution -> NAME ATR Expression)
WARNING: rejected rule (Condition -> Expression) in state 32
WARNING: reduce/reduce conflict in state 75 resolved using rule (Expression -> Expression ADD Term)
WARNING: rejected rule (Expression -> Term) in state 75
WARNING: reduce/reduce conflict in state 76 resolved using rule (Expression -> Expression SUB Term)
WARNING: rejected rule (Expression -> Term) in state 76
WARNING: reduce/reduce conflict in state 77 resolved using rule (Expression -> Expression OR Term)
WARNING: rejected rule (Expression -> Term) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (Condition -> Expression GREATER Expression)
WARNING: rejected rule (Condition -> Expression) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (Condition -> Expression LESS Expression)
WARNING: rejected rule (Condition -> Expression) in state 79
WARNING: reduce/reduce conflict in state 80 resolved using rule (Condition -> Expression GREATERE Expression)
WARNING: rejected rule (Condition -> Expression) in state 80
WARNING: reduce/reduce conflict in state 81 resolved using rule (Condition -> Expression LESSE Expression)
WARNING: rejected rule (Condition -> Expression) in state 81
WARNING: reduce/reduce conflict in state 82 resolved using rule (Condition -> Expression EQUAL Expression)
WARNING: rejected rule (Condition -> Expression) in state 82
WARNING: reduce/reduce conflict in state 83 resolved using rule (Condition -> Expression NEQUAL Expression)
WARNING: rejected rule (Condition -> Expression) in state 83
WARNING: reduce/reduce conflict in state 84 resolved using rule (Term -> Term MULT Factor)
WARNING: rejected rule (Term -> Factor) in state 84
WARNING: reduce/reduce conflict in state 85 resolved using rule (Term -> Term DIV Factor)
WARNING: rejected rule (Term -> Factor) in state 85
WARNING: reduce/reduce conflict in state 86 resolved using rule (Term -> Term MOD Factor)
WARNING: rejected rule (Term -> Factor) in state 86
WARNING: reduce/reduce conflict in state 87 resolved using rule (Term -> Term AND Factor)
WARNING: rejected rule (Term -> Factor) in state 87
WARNING: reduce/reduce conflict in state 101 resolved using rule (Attribution -> NAME LSBRACKET Expression RSBRACKET ATR Expression)
WARNING: rejected rule (Condition -> Expression) in state 101
WARNING: reduce/reduce conflict in state 123 resolved using rule (Attribution -> NAME LSBRACKET Expression RSBRACKET LSBRACKET Expression RSBRACKET ATR Expression)
WARNING: rejected rule (Condition -> Expression) in state 123
